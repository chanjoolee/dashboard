<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="">
    
    <select id="dashboard.jira.discovered.resolution.group" parameterType="hashmap" resultType="hashmap">
    	with tbl_pm as (
    		select distinct LEGACY_PJT_NAME  from pjt_mapping 
    		where LEGACY_NAME = 'JIRA'
    		<if test="pjtCode != null and pjtCode != '' ">
	    		and pjt_name= #{pjtCode}
	    	</if>
	    	<if test="pjtCodeList != null and pjtCodeList != '' ">
            	and pjt_name in 
            <foreach collection="pjtCodeList" item="item" index="index"  open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    	)
    	
    	SELECT		
			'created' as gubun,
			jira.PHASE,
			jira.DISCOVERED_FROM DISCOVERED_FROM_PURE,
			nvl(jira.PHASE,'null')  || '_' ||  nvl(jira.DISCOVERED_FROM,'null') as DISCOVERED_FROM,
			count(*) cnt,
			round(sum(nvl(jira.RESOLUTIONDATE,sysdate) - jira.CREATED),0) as tat		
	    FROM JIRA_ISSUE_STD_FIELD jira
	    JOIN tbl_pm pm
	    	ON PM.LEGACY_PJT_NAME = jira.project  
	    --join pjt_list pl on pl.pjt_code = pm.pjt_name
	    where (jira.issue_from is not null and jira.DISCOVERED_FROM is not null)
	    and exists (
	    	select * from JIRA_ISSUE a
	    	where a.PROJECT_KEY = jira.project_key
	    	and a.issue_num  = jira.issue_num
	    )
	    and jira.phase is not null
	    <if test="jiraPjtCode != null and jiraPjtCode != '' ">
	    	and jira.project = #{jiraPjtCode}
	    </if>
	    
	    group by
			jira.PHASE,
			jira.DISCOVERED_FROM		
		union all
		SELECT		
			'resolved' as gubun,
			jira.PHASE,
			jira.DISCOVERED_FROM DISCOVERED_FROM_PURE,
			nvl(jira.PHASE,'null')  || '_' ||  nvl(jira.DISCOVERED_FROM,'null') as DISCOVERED_FROM,
			count(
				case 
					when RESOLUTION is not null then 1
					else null
				end
			) as cnt,
			round(sum(nvl(jira.RESOLUTIONDATE,sysdate) - jira.CREATED),0) as tat		
	    FROM JIRA_ISSUE_STD_FIELD jira
	    JOIN tbl_pm pm
	    	ON PM.LEGACY_PJT_NAME = jira.project  
	    --join pjt_list pl on pl.pjt_code = pm.pjt_name
	    where (jira.issue_from is not null and jira.DISCOVERED_FROM is not null)
	    and exists (
	    	select * from JIRA_ISSUE a
	    	where a.PROJECT_KEY = jira.project_key
	    	and a.issue_num  = jira.issue_num
	    )
	    and jira.phase is not null
	    <if test="jiraPjtCode != null and jiraPjtCode != '' ">
	    	and jira.project = #{jiraPjtCode}
	    </if>
	    
	    group by
			jira.PHASE,
			jira.DISCOVERED_FROM
		
	order by 1,2

		
    </select>
    
    <select id="dashboard.jira.field.issuefrom.resolution.group" parameterType="hashmap" resultType="hashmap">
    	with tbl_pm as (
    		select distinct LEGACY_PJT_NAME  from pjt_mapping 
    		where LEGACY_NAME = 'JIRA'
    		<if test="pjtCode != null and pjtCode != '' ">
	    		and pjt_name= #{pjtCode}
	    	</if>
	    	<if test="pjtCodeList != null and pjtCodeList != '' ">
            	and pjt_name in 
            <foreach collection="pjtCodeList" item="item" index="index"  open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    	)
    	
    	SELECT		
			'created' as gubun,
			jira.PHASE,
			jira.ISSUE_FROM ISSUE_FROM_PURE,
			nvl(jira.PHASE,'null')  || '_' ||  nvl(jira.ISSUE_FROM,'null') as ISSUE_FROM,
			count(*) cnt,
			round(sum(nvl(jira.RESOLUTIONDATE,sysdate) - jira.CREATED),0) as tat		
	    FROM JIRA_ISSUE_STD_FIELD jira
	    JOIN tbl_pm pm
	    	ON PM.LEGACY_PJT_NAME = jira.project  
	    --join pjt_list pl on pl.pjt_code = pm.pjt_name
	    where (jira.issue_from is not null and jira.DISCOVERED_FROM is not null)
	    and exists (
	    	select * from JIRA_ISSUE a
	    	where a.PROJECT_KEY = jira.project_key
	    	and a.issue_num  = jira.issue_num
	    )
	    and jira.phase is not null
	    <if test="jiraPjtCode != null and jiraPjtCode != '' ">
	    	and jira.project = #{jiraPjtCode}
	    </if>
	    
	    
	    group by
			jira.PHASE,
			jira.ISSUE_FROM		
		union all
		SELECT		
			'resolved' as gubun,
			jira.PHASE,
			jira.ISSUE_FROM ISSUE_FROM_PURE,
			nvl(jira.PHASE,'null')  || '_' ||  nvl(jira.ISSUE_FROM,'null') as ISSUE_FROM,
			count(
				case 
					when RESOLUTION is not null then 1
					else null
				end
			) as cnt,
			round(sum(nvl(jira.RESOLUTIONDATE,sysdate) - jira.CREATED),0) as tat		
	    FROM JIRA_ISSUE_STD_FIELD jira
	    JOIN tbl_pm pm
	    	ON PM.LEGACY_PJT_NAME = jira.project  
	    --join pjt_list pl on pl.pjt_code = pm.pjt_name
	    where (jira.issue_from is not null and jira.DISCOVERED_FROM is not null)
	    and exists (
	    	select * from JIRA_ISSUE a
	    	where a.PROJECT_KEY = jira.project_key
	    	and a.issue_num  = jira.issue_num
	    )
	    and jira.phase is not null
	    <if test="jiraPjtCode != null and jiraPjtCode != '' ">
	    	and jira.project = #{jiraPjtCode}
	    </if>
	    
	    group by
			jira.PHASE,
			jira.ISSUE_FROM
		
	order by 1,2
		
    </select>
    
    <select id="dashboard.jira.field.cause.group" parameterType="hashmap" resultType="hashmap">
    	with tbl_pm as (
    		select distinct LEGACY_PJT_NAME  from pjt_mapping 
    		where LEGACY_NAME = 'JIRA'
    		<if test="pjtCode != null and pjtCode != '' ">
	    		and pjt_name= #{pjtCode}
	    	</if>
	    	<if test="pjtCodeList != null and pjtCodeList != '' ">
            	and pjt_name in 
            <foreach collection="pjtCodeList" item="item" index="index"  open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    	)
    	
    	SELECT		
			'presumed' as gubun,
			nvl(jira.PHASE,'null')  || '_' || nvl(jira.PRESUMED_CAUSE,'null') as PRESUMED_CAUSE,
			count(*) cnt ,
			round(sum(nvl(jira.RESOLUTIONDATE,sysdate) - jira.CREATED),0) as tat		
	    FROM JIRA_ISSUE_STD_FIELD jira
	    JOIN tbl_pm pm
	    	on PM.LEGACY_PJT_NAME = jira.project  
	    --join pjt_list pl on pl.pjt_code = pm.pjt_name
	    where (jira.issue_from is not null and jira.DISCOVERED_FROM is not null)
	    and exists (
	    	select * from JIRA_ISSUE a
	    	where a.PROJECT_KEY = jira.project_key
	    	and a.issue_num  = jira.issue_num
	    )
	    <if test="jiraPjtCode != null and jiraPjtCode != '' ">
	    	and jira.project = #{jiraPjtCode}
	    </if>
	    and jira.RESOLUTIONDATE is not null
	    and jira.phase is not null
	    and jira.confirmed_cause is not null
	    group by
			jira.PHASE,
			jira.PRESUMED_CAUSE
		
		union all
		SELECT		
			'confirmed' as gubun,			
			nvl(jira.PHASE,'null')  || '_' ||   nvl(jira.PRESUMED_CAUSE,'null') as PRESUMED_CAUSE,
			count(
				case 
					when jira.PRESUMED_CAUSE = jira.CONFIRMED_CAUSE then 1
					else null
				end
			) as cnt,
			round(sum(nvl(jira.RESOLUTIONDATE,sysdate) - jira.CREATED),0) as tat	
	    FROM JIRA_ISSUE_STD_FIELD jira
	    JOIN tbl_pm pm
	    	ON PM.LEGACY_PJT_NAME = jira.project  
	    -- join pjt_list pl on pl.pjt_code = pm.pjt_name
	    where (jira.issue_from is not null and jira.DISCOVERED_FROM is not null)
	    and exists (
	    	select * from JIRA_ISSUE a
	    	where a.PROJECT_KEY = jira.project_key
	    	and a.issue_num  = jira.issue_num
	    )
	    <if test="jiraPjtCode != null and jiraPjtCode != '' ">
	    	and jira.project = #{jiraPjtCode}
	    </if>
	    
	    and jira.RESOLUTIONDATE is not null
	    and jira.phase is not null
	    and jira.confirmed_cause is not null
	    group by
			jira.PHASE,
			jira.PRESUMED_CAUSE
		
	order by 1,2,3

		
    </select>
    
    <select id="dashboard.jira.field.raw.list" parameterType="hashmap" resultType="hashmap">
    	SELECT	
    		/*pl.pjt_code,
    		pl.pjt_name,	*/
			jira.PROJECT,
			jira.PROJECT_KEY,
			jira.ISSUE_NUM,
			jira.ISSUETYPE,
			jira.PRIORITY,
			jira.RESOLUTION,
			jira.ISSUESTATUS,
			jira.CREATED,
			jira.RESOLUTIONDATE,
			jira.ISSUE_FROM,
			jira.DISCOVERED_FROM,
			jira.PRESUMED_CAUSE,
			jira.PRESUMED_CAUSE_DETAIL,
			jira.PRESUMED_PRIORITY,
			jira.CONFIRMED_CAUSE,
			jira.CONFIRMED_CAUSE_DETAIL,
			jira.CONFIRMED_PRIORITY,
			jira.ASSIGNEE_ACCOUNT,
			jira.PHASE_ID,
			jira.PHASE,
			round(nvl(jira.RESOLUTIONDATE,sysdate) - jira.CREATED,0) as tat	
	    FROM JIRA_ISSUE_STD_FIELD jira
	    JOIN pjt_mapping pm
	    	ON pm.LEGACY_NAME = 'JIRA'
	    	AND PM.LEGACY_PJT_NAME = jira.project  
	    join pjt_list pl on pl.pjt_code = pm.pjt_name
	    where (jira.issue_from is not null and jira.DISCOVERED_FROM is not null)
	    and exists (
	    	select * from JIRA_ISSUE a
	    	where a.PROJECT_KEY = jira.project_key
	    	and a.issue_num  = jira.issue_num
	    )
	    <if test="jiraPjtCode != null and jiraPjtCode != '' ">
	    	and jira.project = #{jiraPjtCode}
	    </if>
	    <if test="pjtCode != null and pjtCode != '' ">
	    	and pm.pjt_name= #{pjtCode}
	    </if>
	    <if test="pjtCodeList != null and pjtCodeList != '' ">
            and pm.pjt_name in 
            <foreach collection="pjtCodeList" item="item" index="index"  open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        and jira.RESOLUTIONDATE is not null
	    and jira.phase is not null
	    and jira.confirmed_cause is not null

		
    </select>
    
    <select id="dashboard.jira.field.jiraprojectList" parameterType="hashmap" resultType="hashmap">
    	select 
    		distinct PROJECT
    	from JIRA_ISSUE
    	order by 1

    </select>
    
    
    <select id="dashboard.jira.analysis.date.issutype" parameterType="hashmap" resultType="hashmap">
    	select
			pl.PJT_CODE,
			pl.PJT_NAME,
			jira.ISSUETYPE,
			count(*) cnt,
			avg(jira.RESOLUTIONDATE - jira.CREATED) as avg_tat,
			'xxx' as etc 
		from JIRA_ISSUE jira
		join pjt_mapping map on jira.project = map.LEGACY_PJT_NAME
			and map.LEGACY_NAME = 'JIRA'
		join pjt_list pl on map.pjt_name = pl.pjt_code
		where pl.PJT_CODE = #{pjtCode}
		<![CDATA[
		and jira.RESOLUTIONDATE < to_date(#{resolutionDate},'YYYY/MM/DD')
		 ]]>
		and jira.RESOLUTIONDATE is not null
		
		<if test="priority != null">
            and jira.PRIORITY in 
            <foreach collection="priority" item="item" index="index"  open="(" separator="," close=")">
                #{item}
            </foreach>
            
        </if>
        <if test="issuetype != null">
            and jira.ISSUETYPE in 
            <foreach collection="issuetype" item="item" index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
            
        </if>
        <if test="subProjects != null">
   			and jira.project in 
		   <foreach collection="subProjects" item="item" index="index"  open="(" separator="," close=")">
		       #{item}
		   </foreach>		    
		</if>
		
		group by pl.PJT_CODE,
			pl.PJT_NAME,
			jira.ISSUETYPE
		
    </select>
    
    <update id="common.phasename.update" parameterType="hashmap">
    	declare

		begin
			for rec in (
				select * from  JIRA_ISSUE_STD_FIELD where PHASE_ID is not null
				and phase is null
			
			) loop
				update JIRA_ISSUE_STD_FIELD set
					phase = (select CODE_NAME from COMMON_CODE where CATEGORY = 'PHASE' and code_id = rec.phase_id)
				where project_key = rec.project_key
				and issue_num = rec.issue_num;
			end loop;
		end;
    </update>
    
    
    <select id="dashboard.jira.usage.list" parameterType="hashmap" resultType="hashmap">
    
    	-- 사용안함.
    	with tempTable as (
			SELECT pname, pkey, reporter, created, summary, updated, sum(comment_cnt) comment_cnt, sum(history_cnt) history_cnt
			from
			(
				SELECT p.pname, p.pkey||'-'||i.issuenum as pkey, i.id, reporter, i.created, i.summary, i.updated, count(*) as comment_cnt, null as history_cnt
				FROM JIRAUSER.JIRAACTION a, JIRAUSER.JIRAISSUE i, JIRAUSER.project p
				where i.id = a.issueid
				  and i.project = p.id
				  --and to_char(i.created,'yyyy/mm/dd') between ('2015/01/01') and ('2016/02/29')
				group by p.pname, p.pkey||'-'||i.issuenum, i.id, reporter, i.created, i.summary, i.updated
				union
				select p.pname, p.pkey||'-'||i.issuenum as pkey, i.id, i.reporter, i.created, i.summary, i.updated, null, count(*) as history_cnt
				from JIRAUSER.CHANGEITEM c, JIRAUSER.changegroup g, JIRAUSER.jiraissue i, JIRAUSER.project p
				where c.groupid = g.id
				  and g.issueid = i.id
				  and i.project = p.id
				  --and to_char(i.created,'yyyy/mm/dd') between ('2015/01/01') and ('2016/02/29')
				group by p.pname, p.pkey||'-'||i.issuenum, i.id, i.reporter, i.created, i.summary, i.updated
			)
			group by pname, pkey, reporter, created, summary, updated	
		) ,
		-- 사용안함.
		tempTable1 as (
			SELECT pname, pkey, reporter, created, summary, updated, sum(comment_cnt) comment_cnt, sum(history_cnt) history_cnt
			from
			(
				SELECT p.pname, p.pkey||'-'||i.issuenum as pkey, i.id, reporter, i.created, i.summary, i.updated, count(*) as comment_cnt, null as history_cnt
				FROM JIRAUSER.JIRAISSUE i
				join JIRAUSER.project p
					on i.project = p.id
				where exists (select * from JIRAUSER.JIRAACTION a where i.id = a.issueid )							  
				  --and to_char(i.created,'yyyy/mm/dd') between ('2015/01/01') and ('2016/02/29')
				group by p.pname, p.pkey||'-'||i.issuenum, i.id, reporter, i.created, i.summary, i.updated
				union
				select p.pname, p.pkey||'-'||i.issuenum as pkey, i.id, i.reporter, i.created, i.summary, i.updated, null, count(*) as history_cnt
				from JIRAUSER.jiraissue i
				join JIRAUSER.project p
				  on i.project = p.id
				  --and to_char(i.created,'yyyy/mm/dd') between ('2015/01/01') and ('2016/02/29')
				where exists (
					select * from JIRAUSER.CHANGEGROUP g 
					where g.issueid = i.id
					/*and exists (
						select * from JIRAUSER.CHANGEITEM c	
						where c.groupid = g.id
					)*/
				)
				group by p.pname, p.pkey||'-'||i.issuenum, i.id, i.reporter, i.created, i.summary, i.updated
			)
			group by pname, pkey, reporter, created, summary, updated	
		)	,
		-- 최종사용
		tempTable2 as (
			SELECT 
				p.pname, 
				p.pkey||'-'|| i.issuenum as pkey,
				i.id, 
				i.reporter, 
				to_char(i.created,'YYYY-MM-DD HH24:MI') created, 
				to_char(i.updated,'YYYY-MM-DD HH24:MI') updated,
				i.summary
			FROM JIRAUSER.JIRAISSUE i
			join JIRAUSER.project p
				on i.project = p.id
			where 1=1
			<choose>
				<when test="filters != null and filters != ''  and filters.rules.size() > 0 " >
		       		<foreach collection="filters.rules" item="item" index="index"  >
		       			<choose>
		       			<when test="item.field eq 'PKEY' ">
		           			and REGEXP_LIKE(p.pkey || '-' ||  i.ISSUENUM,#{item.data},'i')  
		           		</when>
		           		<when test="item.field eq 'PNAME' ">
		           			and REGEXP_LIKE(p.PNAME,#{item.data},'i') 
		           		</when>
		           		<otherwise>
		           			and REGEXP_LIKE(i.${item.field},#{item.data},'i') 
		           		</otherwise>
		           		</choose>
		       		</foreach>
		   		</when>
		   		<otherwise>
		   		</otherwise>
	   		</choose>
	   		<choose>
	   			<when test="sidx != null and sidx != '' and sord != null and sord != '' "> order by ${sidx} ${sord}</when>
	   			<otherwise> order by i.created desc </otherwise>
	   		</choose>
	   		
		)			
		
		
	    select 
	    		A.*	    		
	    	from (
		    	SELECT		    		
		    		A.*,
		    		(select count(*) from 	 JIRAUSER.JIRAACTION b where a.id = b.issueid) as comment_cnt ,
		    		(select count(*) from 	 JIRAUSER.CHANGEGROUP g join JIRAUSER.CHANGEITEM c on c.groupid = g.id  where a.id = g.issueid) as history_cnt
		    	FROM
		    	(
		    		SELECT A.*, ROWNUM AS ROW_NUM from tempTable2 A
	    	) A 
	    	where
	    	<![CDATA[
		    	A.row_num >  to_number(#{rows}) * (to_number(#{page}) -1) 
		    	and A.row_num <= to_number(#{rows}) * to_number(#{page})
	    	]]>
	    ) A 

		
    </select>
    
     <select id="dashboard.jira.usage.list.page" parameterType="hashmap" resultType="hashmap">
	     	-- 최종사용
			with tempTable2 as (
				SELECT 
					p.pname, p.pkey||'-'|| i.issuenum as pkey,
					i.id, 
					reporter, 
					i.created, 
					i.updated,
					i.summary
				FROM JIRAUSER.JIRAISSUE i
				join JIRAUSER.project p
					on i.project = p.id
				where 1=1
				<choose>
					<when test="filters != null and filters != ''  and filters.rules.size() > 0 " >
			       		<foreach collection="filters.rules" item="item" index="index"  >
			           		<choose>
				       			<when test="item.field eq 'PKEY' ">
				           			and REGEXP_LIKE(p.pkey || '-' ||  i.ISSUENUM,#{item.data},'i') 
				           		</when>
				           		<when test="item.field eq 'PNAME' ">
				           			and REGEXP_LIKE(p.PNAME,#{item.data},'i') 
				           		</when>
				           		<otherwise>
				           			and REGEXP_LIKE(i.${item.field},#{item.data},'i') 
				           		</otherwise>
			           		</choose>
			       		</foreach>
			   		</when>
			   		<otherwise>
			   		</otherwise>
		   		</choose>
			)
			
     		select 
				ceil(count(*)/ #{rows} ) as total,
				#{page} as page ,
				count(*) records 
			from tempTable2
     </select>
     
     
     
    
    
</mapper>