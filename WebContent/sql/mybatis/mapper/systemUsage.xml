<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="">

	<select id="systemUsage.selectSystemUsageDefaultMonth" resultType="hashmap">
		SELECT TO_CHAR(ADD_MONTHS(SYSDATE-1, -11), 'YYYYMM') AS FROM_USE_MONTH , TO_CHAR(SYSDATE-1, 'YYYYMM') AS TO_USE_MONTH FROM DUAL
	</select>
	
	<select id="systemUsage.selectSystemUsageSummaryList" resultType="hashmap">
        SELECT	/* selectSystemUsageSummaryList */
            '01' AS SERIES_TYPE
            , B.USE_MONTH
            , NVL(COUNT_VAL, 0) AS COUNT_VAL
            , TO_CHAR(NVL(COUNT_VAL, 0), 'FM999,999,999,999,999') AS EMPLOYEE_COUNT
            , TO_CHAR(NVL(USE_COUNT, 0), 'FM999,999,999,999,999') AS USE_COUNT
            , NVL(USE_COUNT, 0) AS USE_COUNT_VAL
            , CASE WHEN NVL(COUNT_VAL, 0) = 0 THEN 0 ELSE ROUND(USE_COUNT / COUNT_VAL, 1) END AS USE_AVERAGE
            , ROW_NUMBER() OVER(ORDER BY B.USE_MONTH) AS ROW_SEQ
        FROM (
                SELECT
                    USE_MONTH
                    , COUNT(DISTINCT EMPLOYEE_ID) AS COUNT_VAL
                    , SUM(USE_COUNT) AS USE_COUNT
                FROM 
                    IT_SYSTEM_LOG_USER
                WHERE SYSTEM_ID = #{systemId}
                GROUP BY USE_MONTH
            ) A , (
                SELECT DISTINCT TO_CHAR(TO_DATE(#{fromUseMonth}, 'YYYYMM') + LEVEL - 1, 'YYYYMM') AS USE_MONTH FROM DUAL CONNECT BY LEVEL <![CDATA[ <= ]]> TO_DATE(#{toUseMonth}, 'YYYYMM') - TO_DATE(#{fromUseMonth}, 'YYYYMM') + 1
            ) B
        WHERE A.USE_MONTH(+) = B.USE_MONTH
	</select>

    <select id="systemUsage.selectSystemUsageList" resultType="hashmap">
            SELECT		/* selectSystemUsageList */
                '01' AS SERIES_TYPE
                , FUNCTION_ID
                , FUNCTION_NAME
                , COUNT_VAL
                , TO_CHAR(COUNT_VAL, 'FM999,999,999,999,999') AS EMPLOYEE_COUNT
                , TO_CHAR(USE_COUNT, 'FM999,999,999,999,999') AS USE_COUNT
                , USE_COUNT AS USE_COUNT_VAL
                , CASE WHEN COUNT_VAL = 0 THEN 0 ELSE ROUND(USE_COUNT / COUNT_VAL, 1) END AS USE_AVERAGE
                , ROW_NUMBER() OVER(ORDER BY COUNT_VAL DESC, USE_COUNT DESC) AS ROW_SEQ
            FROM (
                SELECT
                    FUNCTION_ID
                    , FUNCTION_NAME
                    , USE_MONTH
                    , SUM(COUNT_VAL) AS COUNT_VAL
                    , SUM(USE_COUNT) AS USE_COUNT
                FROM (
                    SELECT
                        DECODE((CASE WHEN A.SYSTEM_ID IN ('JIRA', 'Confluence') THEN B.MENU_NM ELSE C.MENU_NM END), '', 'ETC', FUNCTION_ID) AS FUNCTION_ID
                        , NVL(DECODE(A.SYSTEM_ID, 'SolutionPMS', FN_MENU_NAVI(A.FUNCTION_ID) , DECODE((CASE WHEN A.SYSTEM_ID IN ('JIRA', 'Confluence') THEN B.MENU_NM ELSE C.MENU_NM END), '', '[ETC] Unidentified', '[' || A.FUNCTION_ID || '] ' || (CASE WHEN A.SYSTEM_ID IN ('JIRA', 'Confluence') THEN B.MENU_NM ELSE C.MENU_NM END))), 'Unidentified') AS FUNCTION_NAME
                        , A.USE_MONTH
                        , COUNT(DISTINCT EMPLOYEE_ID) AS COUNT_VAL
                        , SUM(A.USE_COUNT) AS USE_COUNT
                    FROM 
                        IT_SYSTEM_LOG_USER A
                        , IT_SYSTEM_MENU_INF B
                        , IT_SYSTEM_MENU C
                    WHERE A.SYSTEM_ID = #{systemId}
                        AND A.USE_MONTH = #{useMonth}
                        AND A.SYSTEM_ID = B.SYSTEM_ID(+)
                        AND A.FUNCTION_ID = B.MENU_ID(+)
                        AND A.SYSTEM_ID = C.SYSTEM_ID(+)
                        AND A.FUNCTION_ID = C.MENU_ID(+)
                    GROUP BY A.SYSTEM_ID, A.FUNCTION_ID, B.MENU_NM, A.USE_MONTH, C.MENU_NM
                )
                GROUP BY FUNCTION_ID, FUNCTION_NAME, USE_MONTH
            )
            ORDER BY ROW_SEQ
    </select>
        
</mapper>