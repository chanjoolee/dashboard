<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="">

	<select id="systemUsage.selectSystemUsageDefaultMonth" resultType="hashmap">
		SELECT TO_CHAR(ADD_MONTHS(TO_DATE(MAX(USE_MONTH), 'YYYYMM'), -11), 'YYYYMM') FROM_USE_MONTH
		     , MAX(USE_MONTH) TO_USE_MONTH 
		FROM IT_SYSTEM_USAGE_MONTH
	</select>
	
	<select id="systemUsage.selectSystemUsageSummaryList" resultType="hashmap">
		SELECT '01' SERIES_TYPE
		     , USE_MONTH
		     , EMPLOYEE_COUNT COUNT_VAL
		     , TO_CHAR(EMPLOYEE_COUNT, 'FM999,999,999,999,999') EMPLOYEE_COUNT
		     , TO_CHAR(USE_COUNT, 'FM999,999,999,999,999') USE_COUNT
		     , CASE WHEN EMPLOYEE_COUNT = 0 THEN 0 ELSE ROUND(USE_COUNT / EMPLOYEE_COUNT, 1) END USE_AVERAGE
		     , ROW_NUMBER() OVER(ORDER BY USE_MONTH) ROW_SEQ
		FROM (
		        SELECT B.USE_MONTH
		             , NVL(A.EMPLOYEE_COUNT, 0) EMPLOYEE_COUNT
		             , NVL(A.USE_COUNT, 0) USE_COUNT
		        FROM (
		                SELECT A.USE_MONTH
		                     <!-- , SUM(EMPLOYEE_COUNT) EMPLOYEE_COUNT -->
		                     , MAX((    SELECT COUNT(DISTINCT EMPLOYEE_ID)
                                    	FROM IT_SYSTEM_USAGE_USER
                                    	WHERE SYSTEM_ID = A.SYSTEM_ID
                                      	  AND USE_MONTH = A.USE_MONTH 
                               )) EMPLOYEE_COUNT
		                     , SUM(USE_COUNT) USE_COUNT
		                FROM IT_SYSTEM_USAGE_MONTH A
		                   , IT_SYSTEM_MENU_HIERARCHY B
		                WHERE 1 = 1
		                  AND A.SYSTEM_ID = #{systemId}
		                  AND A.USE_MONTH BETWEEN #{fromUseMonth} AND #{toUseMonth}
		                  AND A.SYSTEM_ID = B.SYSTEM_ID
		                  AND A.FUNCTION_ID = B.FUNCTION_ID
		                GROUP BY A.USE_MONTH
		             ) A
		           , (  SELECT DISTINCT TO_CHAR(USE_MONTH, 'YYYYMM') USE_MONTH 
		                FROM ( 
		                        SELECT TO_DATE(#{fromUseMonth}, 'YYYYMM') + LEVEL - 1 USE_MONTH
		                        FROM   DUAL CONNECT BY LEVEL <![CDATA[ <= ]]> TO_DATE(#{toUseMonth}, 'YYYYMM') - TO_DATE(#{fromUseMonth}, 'YYYYMM') + 1
		                     )
		             ) B
		        WHERE A.USE_MONTH(+) = B.USE_MONTH
		      )
		UNION ALL
		SELECT '02' SERIES_TYPE
		     , USE_MONTH
		     , USE_COUNT COUNT_VAL
		     , TO_CHAR(EMPLOYEE_COUNT, 'FM999,999,999,999,999') EMPLOYEE_COUNT
		     , TO_CHAR(USE_COUNT, 'FM999,999,999,999,999') USE_COUNT
		     , CASE WHEN EMPLOYEE_COUNT = 0 THEN 0 ELSE ROUND(USE_COUNT / EMPLOYEE_COUNT, 1) END USE_AVERAGE
		     , ROW_NUMBER() OVER(ORDER BY USE_MONTH) ROW_SEQ
		FROM (
		        SELECT B.USE_MONTH
		             , NVL(A.EMPLOYEE_COUNT, 0) EMPLOYEE_COUNT
		             , NVL(A.USE_COUNT, 0) USE_COUNT
		        FROM (
		                SELECT A.USE_MONTH
		                     <!-- , SUM(EMPLOYEE_COUNT) EMPLOYEE_COUNT -->
		                     , MAX((    SELECT COUNT(DISTINCT EMPLOYEE_ID)
                                    	FROM IT_SYSTEM_USAGE_USER
                                    	WHERE SYSTEM_ID = A.SYSTEM_ID
                                      	  AND USE_MONTH = A.USE_MONTH 
                               )) EMPLOYEE_COUNT
		                     , SUM(USE_COUNT) USE_COUNT
		                FROM IT_SYSTEM_USAGE_MONTH A
		                   , IT_SYSTEM_MENU_HIERARCHY B
		                WHERE 1 = 1
		                  AND A.SYSTEM_ID = #{systemId}
		                  AND A.USE_MONTH BETWEEN #{fromUseMonth} AND #{toUseMonth}
		                  AND A.SYSTEM_ID = B.SYSTEM_ID
		                  AND A.FUNCTION_ID = B.FUNCTION_ID
		                GROUP BY A.USE_MONTH
		             ) A
		           , (  SELECT DISTINCT TO_CHAR(USE_MONTH, 'YYYYMM') USE_MONTH 
		                FROM ( 
		                        SELECT TO_DATE(#{fromUseMonth}, 'YYYYMM') + LEVEL - 1 USE_MONTH
		                        FROM   DUAL CONNECT BY LEVEL <![CDATA[ <= ]]> TO_DATE(#{toUseMonth}, 'YYYYMM') - TO_DATE(#{fromUseMonth}, 'YYYYMM') + 1
		                     )
		             ) B
		        WHERE A.USE_MONTH(+) = B.USE_MONTH
		      )
	</select>

    <select id="systemUsage.selectSystemUsageList" resultType="hashmap">
    	SELECT '01' SERIES_TYPE
             , FUNCTION_ID
             , FUNCTION_NAME
             , EMPLOYEE_COUNT COUNT_VAL
             , TO_CHAR(EMPLOYEE_COUNT, 'FM999,999,999,999,999') EMPLOYEE_COUNT
             , TO_CHAR(USE_COUNT, 'FM999,999,999,999,999') USE_COUNT
             , CASE WHEN EMPLOYEE_COUNT = 0 THEN 0 ELSE ROUND(USE_COUNT / EMPLOYEE_COUNT, 1) END USE_AVERAGE
             , ROW_NUMBER() OVER(ORDER BY A.EMPLOYEE_COUNT DESC, A.USE_COUNT DESC, A.FUNCTION_ID) ROW_SEQ
        FROM (
                SELECT B.SYSTEM_ID
                     , B.FUNCTION_ID
                     , CASE WHEN B.SYSTEM_ID = 'SolutionPMS' THEN CASE WHEN B.MENU_LEVEL_4 IS NULL THEN B.MENU_LEVEL_1 || ' > ' || B.MENU_LEVEL_2 || ' > ' || B.FUNCTION_NAME 
                                                                                                   ELSE B.MENU_LEVEL_1 || ' > ' || B.MENU_LEVEL_2 || ' > ' || B.MENU_LEVEL_3 || ' > ' || B.FUNCTION_NAME 
                                                                  END
                       ELSE '[' || B.MENU_LEVEL_1 || '] ' || B.FUNCTION_NAME END FUNCTION_NAME
                     , NVL(A.EMPLOYEE_COUNT, 0) EMPLOYEE_COUNT
                     , NVL(A.USE_COUNT, 0) USE_COUNT
                FROM (  
                        SELECT SYSTEM_ID
                             , FUNCTION_ID
                             , USE_MONTH
                             , EMPLOYEE_COUNT
                             , USE_COUNT
                        FROM IT_SYSTEM_USAGE_MONTH
                        WHERE 1 = 1
                          AND SYSTEM_ID = #{systemId}
                          AND USE_MONTH = #{useMonth}
                      ) A,
                      (
                        SELECT SYSTEM_ID
                             , FUNCTION_ID
                             , FUNCTION_NAME
                             , MENU_LEVEL_1
                             , MENU_LEVEL_2
                             , MENU_LEVEL_3
                             , MENU_LEVEL_4
                        FROM IT_SYSTEM_MENU_HIERARCHY
                        WHERE SYSTEM_ID = #{systemId}
                      ) B
                WHERE A.SYSTEM_ID(+) = B.SYSTEM_ID
                  AND A.FUNCTION_ID(+) = B.FUNCTION_ID
             ) A
        UNION ALL
        SELECT '02' SERIES_TYPE
             , FUNCTION_ID
             , FUNCTION_NAME
             , USE_COUNT COUNT_VAL
             , TO_CHAR(EMPLOYEE_COUNT, 'FM999,999,999,999,999') EMPLOYEE_COUNT
             , TO_CHAR(USE_COUNT, 'FM999,999,999,999,999') USE_COUNT
             , CASE WHEN EMPLOYEE_COUNT = 0 THEN 0 ELSE ROUND(USE_COUNT / EMPLOYEE_COUNT, 1) END USE_AVERAGE
             , ROW_NUMBER() OVER(ORDER BY A.EMPLOYEE_COUNT DESC, A.USE_COUNT DESC, A.FUNCTION_ID) ROW_SEQ
        FROM (
                SELECT B.SYSTEM_ID
                     , B.FUNCTION_ID
                     , CASE WHEN B.SYSTEM_ID = 'SolutionPMS' THEN CASE WHEN B.MENU_LEVEL_4 IS NULL THEN B.MENU_LEVEL_1 || ' > ' || B.MENU_LEVEL_2 || ' > ' || B.FUNCTION_NAME 
                                                                                                   ELSE B.MENU_LEVEL_1 || ' > ' || B.MENU_LEVEL_2 || ' > ' || B.MENU_LEVEL_3 || ' > ' || B.FUNCTION_NAME 
                                                                  END
                       ELSE '[' || B.MENU_LEVEL_1 || '] ' || B.FUNCTION_NAME END FUNCTION_NAME
                     , NVL(A.EMPLOYEE_COUNT, 0) EMPLOYEE_COUNT
                     , NVL(A.USE_COUNT, 0) USE_COUNT
                FROM (  
                        SELECT SYSTEM_ID
                             , FUNCTION_ID
                             , USE_MONTH
                             , EMPLOYEE_COUNT
                             , USE_COUNT
                        FROM IT_SYSTEM_USAGE_MONTH
                        WHERE 1 = 1
                          AND SYSTEM_ID = #{systemId}
                          AND USE_MONTH = #{useMonth}
                      ) A,
                      (
                        SELECT SYSTEM_ID
                             , FUNCTION_ID
                             , FUNCTION_NAME
                             , MENU_LEVEL_1
                             , MENU_LEVEL_2
                             , MENU_LEVEL_3
                             , MENU_LEVEL_4
                        FROM IT_SYSTEM_MENU_HIERARCHY
                        WHERE SYSTEM_ID = #{systemId}
                      ) B
                WHERE A.SYSTEM_ID(+) = B.SYSTEM_ID
                  AND A.FUNCTION_ID(+) = B.FUNCTION_ID
             ) A
    </select>
        
</mapper>