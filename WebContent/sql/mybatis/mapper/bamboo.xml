<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="">
    <select id="dashboard.bamboo.status.all" resultType="hashmap">
    	with maxRevision as (
			select a.project,a.name,a.INFORM_ID,
				a.start_time
				--to_char(a.START_TIME,'YYYY-MM-DD HH24:mi ') START_TIME
			from(
				select 
					a.project,a.name,a.INFORM_ID, a.start_time, row_number() over(partition by a.project,name order by a.START_TIME desc,inform_id desc) m
				from BAMBOO_INFO a
			)  a where a.m = 1	
		)
    	
    	select
    		a.project,
    		a.status,
    		count(*) cnt ,
    		max(a.start_time) as start_time
    	from (
	    	select
				info.PROJECT,
				case 
					when lower(result.status) = 'pass' then 'PASS'
					else 'FAIL'
				end as STATUS,
				mr.start_time
			from BAMBOO_INFO info
			join maxRevision mr
				on mr.inform_id = info.inform_id
			join BAMBOO_TEST_RESULT result
				on result.inform_id = info.inform_id
    	) a
    	group by a.PROJECT, a.STATUS
	    
	  
    </select>
    
    
    
    <select id="dashboard.bamboo.status.all.classname" resultType="hashmap">
    	
	    with maxRevision as (
			select a.project,a.name,a.INFORM_ID
			from(
				select 
					a.project,a.name,a.INFORM_ID, row_number() over(partition by a.project,name order by start_time desc,a.INFORM_ID desc) m
				from BAMBOO_INFO a
				where project = #{project}
			)  a where a.m = 1	
		)
		
    	select
    		a.project,
    		a.class_name,
    		a.status,
    		count(*) cnt,
    		max(start_time) start_time
    	from (
		    select
				info.PROJECT,
				info.NAME class_name ,
				case 
					when lower(result.status) = 'pass' then 'PASS'
					else 'FAIL'
				end as STATUS ,
				to_char(info.START_TIME,'YYYY-MM-DD HH24:mi ') as start_time
			from BAMBOO_INFO info
			join maxRevision mr
				on mr.inform_id = info.inform_id
			join BAMBOO_TEST_RESULT result
				on result.inform_id = info.inform_id
		) a
		group by a.PROJECT, a.class_name, a.STATUS
	  
    </select>
    
    
    <select id="dashboard.bamboo.status.all.classname.timeline" resultType="hashmap">
    	
	    select 
			a.project,
			a.class_name,
			a.inform_id,
			a.status,
			max(a.START_TIME) as start_time,
			count(*) cnt
		from 
		(
			select
				info.PROJECT,
				info.NAME as class_name ,
				info.INFORM_ID,
				case 
					when lower(result.status) = 'pass' then 'PASS'
					else 'FAIL'
				end as STATUS ,
				to_char(info.START_TIME,'YYYY-MM-DD HH24:mi ') as start_time,
				rank() over(partition by info.PROJECT,info.NAME order by info.START_TIME desc) as seq
			from BAMBOO_INFO info		
			join BAMBOO_TEST_RESULT result
				on result.inform_id = info.inform_id
				
			where info.PROJECT = #{project}
			and info.name = #{className}
		) a
		group by a.project,
			a.class_name,
			a.inform_id,
			a.status
		order by a.INFORM_ID
	  
    </select>
    
    
    
    <select id="dashboard.bamboo.status.all.classname.timeline.list" resultType="hashmap">
    	
	    select
				info.PROJECT,
				info.INFORM_ID,
				info.NAME as class_name ,
				info.BAMBOO_PRJ_NAME ,
				info.BAMBOO_BUILD_NUM,
				info.BAMBOO_PRJ_NAME || '-' || info.BAMBOO_BUILD_NUM as BAMBOO_LINK,
				result.result_id,
				result.TEST_NAME,
				result.status,
				result.CPU_TIME,
				result.TIME,
				result.ERROR_TYPE,
				result.SEED,
				result.USER_INFO
				
			from BAMBOO_INFO info		
			join BAMBOO_TEST_RESULT result
				on result.inform_id = info.inform_id
			where info.inform_id = #{informId}
			order by info.PROJECT, info.NAME, result.TEST_NAME
	  
    </select>
    
    
</mapper>