
CREATE TABLE ssd_stat_defect_raw
(
    path VARCHAR2(300),
    defect_type VARCHAR2(100),
    progress VARCHAR2(100),
    num VARCHAR2(100),
    channel VARCHAR2(100),
    die VARCHAR2(100),
    block VARCHAR2(100),
    INS_DT                      DATE,
    MOD_DT                      DATE,
    CONSTRAINT PK_SSD_STAT_DEFECT_RAW PRIMARY KEY (path,defect_type,progress,num)
);


CREATE TABLE ssd_stat_error_log_sata
(
    path VARCHAR2(300),
    progress VARCHAR2(100),
    num VARCHAR2(100),
    error_type VARCHAR2(100),
    channel VARCHAR2(100),
    die VARCHAR2(100),
    block VARCHAR2(100),
    page VARCHAR2(100),
    status VARCHAR2(100),
    isr_type VARCHAR2(100),
    INS_DT                      DATE,
    MOD_DT                      DATE,
    CONSTRAINT PK_SSD_STAT_ERROR_LOG_SATA PRIMARY KEY (path,progress,num)
);


CREATE TABLE ssd_stat_error_log_pcie
(
    path VARCHAR2(300),
    progress VARCHAR2(100),
    num VARCHAR2(100),
    error_type VARCHAR2(100),
    channel VARCHAR2(100),
    die VARCHAR2(100),
    block VARCHAR2(100),
    multi_plan_enable VARCHAR2(100),
    bad_flag VARCHAR2(100),
    core VARCHAR2(100),
    INS_DT                      DATE,
    MOD_DT                      DATE,
    CONSTRAINT PK_SSD_STAT_ERROR_LOG_PCIE PRIMARY KEY (path,progress,num)
);


CREATE TABLE ssd_stat_host_info_raw
(
    path VARCHAR2(300),
    progress VARCHAR2(100),
    command VARCHAR2(100),
    group_name VARCHAR2(100),
    count VARCHAR2(100),
    size VARCHAR2(100),
    latency_max VARCHAR2(100),
    latency_min VARCHAR2(100),
    INS_DT                      DATE,
    MOD_DT                      DATE,
    CONSTRAINT PK_SSD_STAT_HOST_INFO_RAW PRIMARY KEY (path,progress,command)
);


CREATE TABLE ssd_stat_pe_count
(
    path VARCHAR2(300),
    progress VARCHAR2(100),
    group_name VARCHAR2(100),
    min VARCHAR2(100),
    max VARCHAR2(100),
    avg VARCHAR2(100),
    INS_DT                      DATE,
    MOD_DT                      DATE,
    CONSTRAINT PK_SSD_STAT_PE_COUNT PRIMARY KEY (path,progress,group_name)
);


CREATE TABLE ssd_stat_smart_code_def
(
    code_no VARCHAR2(100),
    name VARCHAR2(100),
    ssd_type VARCHAR2(100),
    id VARCHAR2(100),
    page VARCHAR2(100),
    addr VARCHAR2(100),
    customer VARCHAR2(100),
    INS_DT                      DATE,
    MOD_DT                      DATE,
    CONSTRAINT PK_SSD_STAT_SMART_CODE_DEF PRIMARY KEY (code_no)
);


CREATE TABLE ssd_stat_smart_sata
(
    path VARCHAR2(300),
    progress VARCHAR2(100),
    id VARCHAR2(100),
    name VARCHAR2(100),
    value VARCHAR2(100),
    normalized VARCHAR2(100),
    worst VARCHAR2(100),
    flag VARCHAR2(100),
    threshold VARCHAR2(100),
    INS_DT                      DATE,
    MOD_DT                      DATE,
    CONSTRAINT PK_SSD_STAT_SMART_SATA PRIMARY KEY (path,progress,id)
);


CREATE TABLE ssd_stat_smart_pcie
(
    path VARCHAR2(300),
    progress VARCHAR2(100),
    code_no VARCHAR2(100),
    value VARCHAR2(100),
    INS_DT                      DATE,
    MOD_DT                      DATE,
    CONSTRAINT PK_SSD_STAT_SMART_PCIE PRIMARY KEY (path,progress,code_no)
);


CREATE TABLE ssd_stat_smart_ext
(
    path VARCHAR2(300),
    progress VARCHAR2(100),
    name VARCHAR2(100),
    value VARCHAR2(100),
    INS_DT                      DATE,
    MOD_DT                      DATE,
    CONSTRAINT PK_SSD_STAT_SMART_EXT PRIMARY KEY (path,progress,name)
);


