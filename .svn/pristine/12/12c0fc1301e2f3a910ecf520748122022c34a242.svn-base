<%@ page contentType="text/html;charset=utf-8" %>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<%@ page session="false" %>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
<head>
	
    <title>projectOneStackByPCntDate</title>
    <%-- 1. jquery --%>
    <script src="js/jquery/jquery-1.11.2.js"></script>
    <script src="js/jquery-ui-1.11.3.custom/jquery-ui.js"></script>
    <script src="js/jquery.csv-0.71.js"></script>
    
    <script type="text/javascript" src="js/jqGrid/jquery.jqGrid.src.js"></script>
    <script type="text/javascript" src="js/jqGrid/i18n/grid.locale-kr.js"></script>
    
    <!-- <script type="text/javascript" src="http://www.ok-soft-gmbh.com/jqGrid/jquery.jqGrid-4.4.1/js/i18n/grid.locale-en.js"></script> -->
    <!-- <script type="text/javascript" src="http://www.ok-soft-gmbh.com/jqGrid/jquery.jqGrid-4.4.1/js/jquery.jqGrid.src.js"></script> -->
    <!-- <script type="text/javascript" src="http://www.ok-soft-gmbh.com/jqGrid/json2.js"></script> -->
    
    <%-- 2. high charts --%>
    
	<script src="js/highcharts/src/highcharts.src.js"></script>
	<script src="js/highcharts/modules/drilldown.src.js"></script>
	
	<!-- <script src="js/highcharts/multi-drilldown.js"></script> -->
	
	<script src="js/highcharts/src/highcharts-more.src.js"></script>
	<script src="js/highcharts/src/exporting.src.js"></script>
	
	
	
	<%-- 3. Additional files for the Highslide popup effect --%>
	<script type="text/javascript" src="js/highslide/highslide-full.js"></script>
	<script type="text/javascript" src="js/highslide/highslide.config.js" charset="utf-8"></script>
	
	<%-- 4. local common --%>
	<script src="js/dashboard.js?version=1"></script>
	
	<%-- 5. local --%>
	<script src="js/pms/resourceBySite.js"></script>
	<script src="js/pms/resourceByFunc.js"></script>
	
	<link rel="stylesheet" type="text/css" href="js/highslide/highslide.css" />
	<link rel="stylesheet" type="text/css" href="js/jquery-ui-1.11.3.custom/jquery-ui.css" />
	<link rel="stylesheet" type="text/css" href="js/jqGrid/css/ui.jqgrid.css" />
	<script type="text/javascript">
	var dataListOrigine = [];
	var dataList = [];
	var planList = [];
	var modelList = [];
	var dataPhase = [];
	
	
	var currentFunc ;
	var currentArg ;
    
	var plotBandsHigh = new Array();
	var plotLinesHigh = new Array();
		
	$(function () {
		getDataByJson();
	});
	
	
	function getDataByJson(){
		if( $("#pjt_code").val() == "")
			return;
		
		$.ajax({
			url : "/dashboard/pmsResourceProjectJson.html",
			//data: {PJT_CODE: $("#sProject").val() },
			data: $("#form").serialize(),
			success : function(responseData){
				//dataList = responseData.plan;
				//planList =  responseData.data;
				dataList = responseData.data;
				planList =  responseData.plan;
				modelList = responseData.model;
				dataPhase = responseData.dataPhase;
				
				// Phase. plotBands 구성
				makePhaseBand();
				
				var searchOption = $("#category").val();	
				
				var pjtId = $("#pjt_code").val();
				if(searchOption == 'function')
					drawchartByProjectFunc(pjtId);
				else 
					drawchartByProjectSite(pjtId);
			}
		});
	}
	
	
	
	
	
	// 가사의 UTC 날자로 실제 날의 가져올다.
	function getDataByUtc(pjtCode,utcDate){
		var dataRaw = responseDataG.data;
		for(var i=0;i<dataRaw.length;i++){
			var data = dataRaw[i];
			if(data.PJT_CODE == pjtCode && data.utcDate == utcDate )
				return data;//data.phaseSeqDt;
		}
		return 'error';
	}
	
	

	
	function filteredDrawChart(filters,searchOption){
		dataList = dataFilter(dataListOrigine, filters);
		var pjtId = $("#pjt_code").val();
		if(searchOption != ''){
			if(searchOption == 'function')
				drawchartByProjectFunc(pjtId);
			else
				drawchartByProjectSite(pjtId);
			
		}else{
			currentFunc.apply({},currentArg);
		}	
	}
	
	
	function drawchartByProjectSite(pjtId){
		currentFunc = drawchartByProjectSite;
		currentArg = arguments;
		
		//raw
		var actulGroupKeys = ['PJT_ID','PJT_NAME','NATL_CD','NATL_NAME','YYYYMM'];
		/* var actulSeries = getDrillDownDataSeries(
				'',
				dataList,
				actulGroupKeys,
				[{col:'PJT_ID',val:pjtId}],
				'YYYYMM', //x축 date
				'MM_RESULT', //y축
				{cd: 'NATL_CD', name:'NATL_NAME'}
		); */
		
		var actulSeries = getDrillDownDataSeries2(
				'',
				dataList ,
				actulGroupKeys ,
				[{col:'PJT_ID',val:pjtId}], //filter
				[{col:'YYYYMM',convert:'x',datatype:'date'},{col:'MM_RESULT',convert:'y',isnull:0}], //convert
				'YYYYMM', 
				'MM_RESULT',
				{cd: 'NATL_CD', name:'NATL_NAME'}
		);
		
		//plan
		var groupKeyPlan =  ['PJT_ID','PJT_NAME','YYYYMM'];
		/* var planSeries = getDrillDownDataSeries(
				'',
				planList,
				groupKeyPlan,
				[{col:'PJT_ID',val:pjtId}],
				'YYYYMM', //x축 date
				'MM_PLAN', //y축
				{cd: 'PJT_ID', name:'PJT_NAME'}
		); */
		
		var planSeries = getDrillDownDataSeries2(
				'',
				planList ,
				groupKeyPlan ,
				[{col:'PJT_ID',val:pjtId}], //filter
				[{col:'YYYYMM',convert:'x',datatype:'date'},{col:'MM_PLAN',convert:'y',isnull:0}], //convert
				'YYYYMM', 
				'MM_PLAN',
				{cd: 'PJT_ID', name:'PJT_ID'}
		);
		
		$.each(planSeries.series,function(index,val){
			val.id = 'Plan';
			val.name = 'Plan';
			val.type = "spline";
			val.color = phaseColor[val.name];
			val.visible = false;
			//val.zoomType =  'xy';
		});		
		
		//model
		var groupKeyModel =  ['PJT_ID','PJT_NAME','YYYYMM'];
		/* var modelSeries = getDrillDownDataSeries(
				'',
				modelList,
				groupKeyModel,
				[{col:'PJT_ID',val:pjtId}],
				'YYYYMM', //x축 date
				'MM', //y축
				{cd: 'PJT_ID', name:'PJT_NAME'}
		); */
		
		var modelSeries =  getDrillDownDataSeries2(
				'',
				modelList ,
				groupKeyModel ,
				[{col:'PJT_ID',val:pjtId}], //filter
				[{col:'YYYYMM',convert:'x',datatype:'date'},{col:'MM',convert:'y',isnull:0}], //convert
				'YYYYMM', 
				'MM',
				{cd: 'PJT_ID', name:'PJT_ID'}
		);
		
		$.each(modelSeries.series,function(index,val){
			val.id = 'Model';
			val.name = 'Model';
			val.type = "spline";
			val.color = phaseColor[val.name];
			//val.zoomType =  'xy';
		});	
		
		//series merge
		var series = [];
		$.merge(series,actulSeries.series);
		$.merge(series,planSeries.series);
		
		//모델은 포함하지 않는다.
		//$.merge(series,modelSeries.series);
		
		if($('#container').highcharts() != undefined) $('#container').highcharts().destroy();;
		$('#container').highcharts({
	        chart: {
	            type: 'area'
	            ,zoomType: 'y'
	        },
	        credits: {//gets rid of the highcharts logo in bottom right
                enabled: false
            },
	        title: {
	        	text: '&nbsp;' ,//series[0].data[0].PJT_NAME + '(by Project > Site)' ,
            	useHTML: true
	        },
	        subtitle: {
	            text: ''
	        },
	        /* exporting:{
	        	buttons: [
					{
						//cursor: 'pointer',
					    x: -270,
					    y: 5,
					    onclick: function () {
							drawchartByAllProject();
					    },
					    symbol: 'square',
					    text:'Up to All Project'
					},
					{
					    x: -100,
					    y: 5,
					    onclick: function () {
					    	drawchartByProjectFunc(pjtId);
					    },
					    symbol: 'square',
					    text:'Convert Project > Func'
					}
				]
	        }, */
	        xAxis: {
	        	type: 'datetime',
	        	//tickInterval: 24 * 3000000 * 1000 , //1000000 * 60 * 60 * 24 ,
	        	tickInterval: 24 * 3600 * 1000 * 30,
	        	//tickmarkPlacement: 'on',
	        	dateTimeLabelFormats: { // don't display the dummy year
	        		week: '%m/%e',
	        		day: '%m/%e',
	        		//month: '%y/%m/%e',
	        		month: '%y/%m',
	        		//year: '%y/%m/%e'
	        		year: '%y'
	            },
	            //title: {
	            //    enabled: false
	            //},
	            plotBands : plotBandsHigh,
	            plotLines: plotLinesHigh
	           /* ,labels: {
	                formatter: function () {
	                	var dt = new Date(this.value);
	                	return (dt.getMonth()+1) + '.' + dt.getDate();
	                    
	                }
	            } */
	        },
	        yAxis: {
	            title: {
	                text: ''
	            }
	            
	        },
	        tooltip: {
	        	enabled:true,
	            shared: true ,
	            crosshairs: true,
	            dateTimeLabelFormats: {
	            	week: '%y/%m/%e',
	        		day: '%y/%m/%e',
	        		month: '%y/%m/%e',
	        		year: '%y/%m/%e'
	            },
	            valueSuffix: '' ,
	            valueDecimals: 2/* ,
	            formatter: function () {
	            	var data = getDataByUtc($("#sProject").val(), this.x);
	                return '' +  data.PHASE + '_' + data.PHASE_SEQ + ' ' + data.ANALYSYS_DATE.replace(/\//g,'.') +  '<br/>' + 
	                    '' + this.series.name + ':' + this.y + '';
	            } */
	        },
	        //legend: legend,
	        plotOptions: {
	        	series: {
	        		cursor: 'pointer',
	                connectNulls: true// by default
	               /*  point:{
	                	events:{
	                		click: function(e){
	                			//alert('click');
	                		}
	                	}
	                } */
	                
	            },
	            spline:{
	            	dataLabels: {
	                    enabled: true,
	                    format:'{point.y:.0f}'
	                }
	            },
	            area: {
	                stacking: 'normal',
	                lineColor: '#666666',
	                lineWidth: 1,
	                marker: {
	                    lineWidth: 1,
	                    lineColor: '#666666',
	                    enabled: true
	                },
	                dataLabels: {
	                    enabled: true,
	                    format:'{point.y:.0f}'
	                },
	                trackByArea: true,
	                enableMouseTracking: true,
	                events:{
	                	click: function(e){
	                		//this.options.pjt_id
	                		//this.options.pjt_name
	                		drawchartByProjectSiteFunc(pjtId,this.options.id);
                		}  
	                }
	                	
	            },
	            line: {
	            	//stacking: 'normal',
	                //lineColor: 'red',
	                //lineWidth: 1,
	                marker: {
	                	enabled: false,
	                    lineWidth: 1,
	                    lineColor: '#666666'
	                },
	                dataLabels: {
	                    enabled: false
	                },
	                enableMouseTracking: false
	            }
	        },	        
	        series: series
	        //drilldown: {series: drilldowns}
	        
	    },function(chart){	    	
		    	/* var filters = [
		    		{col: 'PJT_ID',val: pjtId}
		    	];
				var sorts = ['PJT_NAME','NATL_NAME','UP_PJT_FUNC_NAME','PJT_FUNC_NAME','YYYYMM'];			
				var list = getFilteredData(dataList,filters,sorts);
				setAlldataInList(list);
		    	drawGrid(list, gridModel);	 */
	    	}
		);
		
	}
	
	function drawchartByProjectSiteFunc(pjtId,site){
		currentFunc = drawchartByProjectSiteFunc;
		currentArg = arguments;
		
		var groupKeys = ['PJT_ID','PJT_NAME','NATL_CD','NATL_NAME','UP_PJT_FUNC_NAME','YYYYMM'];
		/* var series = getDrillDownDataSeries(
				site,
				dataList,
				groupKeys,
				[{col:'PJT_ID',val:pjtId},{col:'NATL_CD',val:site}],
				'YYYYMM',
				'MM_RESULT',
				{cd: 'UP_PJT_FUNC_NAME', name:'UP_PJT_FUNC_NAME'}
		); */
		
		
		var series = getDrillDownDataSeries2(
				'',
				dataList,
				groupKeys,
				[{col:'PJT_ID',val:pjtId},{col:'NATL_CD',val:site}],
				[{col:'YYYYMM',convert:'x',datatype:'date'},{col:'MM_RESULT',convert:'y',isnull:0}], //convert
				'YYYYMM',
				'MM_RESULT',
				{cd: 'UP_PJT_FUNC_NAME', name:'UP_PJT_FUNC_NAME'}
		);
		
		
		
		
		if($('#container').highcharts() != undefined) $('#container').highcharts().destroy();;
		$('#container').highcharts({
	        chart: {
	            type: 'area'
	        },
	        credits: {//gets rid of the highcharts logo in bottom right
                enabled: false
            },
	        title: {
	        	text:  series.series[0].data[0].NATL_NAME ,
            	useHTML: true
	        },
	        subtitle: {
	            text: ''
	        },
	        exporting:{
	        	buttons: [
					/* {
						cursor: 'pointer',
					    x: -250,
					    y: 5,
					    onclick: function () {
							drawchartByAllProject();
					    },
					    symbol: 'square',
					    text:'Up to Main'
					}, */
					{
					    x: -100,
					    y: 5,
					    onclick: function () {
					    	drawchartByProjectSite(pjtId);
					    },
					    symbol: 'square',
					    text:'Up to All Site'
					}
				]
	        },
	        xAxis: {
	        	type: 'datetime',
	        	//tickInterval: 24 * 3000000 * 1000 , //1000000 * 60 * 60 * 24 ,
	        	tickInterval: 24 * 3600 * 1000 * 30,
	        	//tickmarkPlacement: 'on',
	        	dateTimeLabelFormats: { // don't display the dummy year
	        		week: '%m/%e',
	        		day: '%m/%e',
	        		//month: '%y/%m/%e',
	        		month: '%y/%m',
	        		//year: '%y/%m/%e',
	        		year: '%y'
	            },
	            //title: {
	            //    enabled: false
	            //},
	            plotBands : plotBandsHigh,
	            plotLines: plotLinesHigh
	           /* ,labels: {
	                formatter: function () {
	                	var dt = new Date(this.value);
	                	return (dt.getMonth()+1) + '.' + dt.getDate();
	                    
	                }
	            } */
	        },
	        yAxis: {
	            title: {
	                text: ''
	            }
	            
	        },
	        tooltip: {
	        	enabled:true,
	            shared: true ,
	            crosshairs: false,
	            dateTimeLabelFormats: {
	            	week: '%y/%m/%e',
	        		day: '%y/%m/%e',
	        		month: '%y/%m/%e',
	        		year: '%y/%m/%e'
	            },
	            valueSuffix: '',
	            valueDecimals: 2/* ,
	            formatter: function () {
	            	var data = getDataByUtc($("#sProject").val(), this.x);
	                return '' +  data.PHASE + '_' + data.PHASE_SEQ + ' ' + data.ANALYSYS_DATE.replace(/\//g,'.') +  '<br/>' + 
	                    '' + this.series.name + ':' + this.y + '';
	            } */
	        },
	        //legend: legend,
	        plotOptions: {
	        	series: {
	        		//cursor: 'pointer',
	                connectNulls: true // by default
	               /*  point:{
	                	events:{
	                		click: function(e){
	                			//alert('click');
	                		}
	                	}
	                } */
	            },
	            spline:{
	            	dataLabels: {
	                    enabled: true,
	                    format:'{point.y:.0f}'
	                }
	            },
	            area: {
	                stacking: 'normal',
	                lineColor: '#666666',
	                lineWidth: 1,
	                marker: {
	                    lineWidth: 1,
	                    lineColor: '#666666',
	                    enabled: true
	                },
	                dataLabels: {
	                    enabled: true,
	                    format:'{point.y:.0f}'
	                },
	                trackByArea: true,
	                enableMouseTracking: true
	                /* events:{
	                	click: function(e){
	                		//this.options.pjt_id
	                		//this.options.pjt_name
	                		drawchartByProjectSite(this.name);
                		}  
	                } */
	                	
	            },
	            line: {
	            	//stacking: 'normal',
	                //lineColor: 'red',
	                //lineWidth: 1,
	                marker: {
	                	enabled: false,
	                    lineWidth: 1,
	                    lineColor: '#666666'
	                },
	                dataLabels: {
	                    enabled: false
	                },
	                enableMouseTracking: false
	            },
	            column: {
	            	stacking: 'normal',
	                //lineColor: 'red',
	                //lineWidth: 1,
	                marker: {
	                	enabled: true,
	                    lineWidth: 1,
	                    lineColor: '#666666'
	                },
	                dataLabels: {
	                    enabled: true
	                },
	                enableMouseTracking: true
	            }
	        },	        
	        series: series.series
	    },function(chart){
    			/* var filters = [
   		    		{col: 'PJT_ID',val: pjtId},
   		    		{col: 'NATL_CD',val: site}
   		    	];
   				var sorts = ['PJT_NAME','NATL_NAME','UP_PJT_FUNC_NAME','PJT_FUNC_NAME','YYYYMM'];			
   				var list = getFilteredData(dataList,filters,sorts);
   				setAlldataInList(list);
   		    	drawGrid(list, gridModel);	 */
	    	}
		);
		
	}
	
	function drawchartByProjectFunc(pjtId){
		currentFunc = drawchartByProjectFunc;
		currentArg = arguments;
		
		//raw
		var actulGroupKeys = ['PJT_ID','PJT_NAME','UP_PJT_FUNC_NAME','YYYYMM'];
		/* var actulSeries = getDrillDownDataSeries(
				'',
				dataList,
				actulGroupKeys,
				[{col:'PJT_ID',val:pjtId}],
				'YYYYMM', //x축 date
				'MM_RESULT', //y축
				{cd: 'UP_PJT_FUNC_NAME', name:'UP_PJT_FUNC_NAME'}
		); */
		
		var actulSeries = getDrillDownDataSeries2(
				'',
				dataList ,
				actulGroupKeys ,
				[{col:'PJT_ID',val:pjtId}], //filter
				[{col:'YYYYMM',convert:'x',datatype:'date',isnull:0},{col:'MM_RESULT',convert:'y',isnull:0}], //convert
				'YYYYMM', 
				'MM_RESULT',
				{cd: 'UP_PJT_FUNC_NAME', name:'UP_PJT_FUNC_NAME'}
		);
		
		//pmo visible false
		$.each(actulSeries.series,function(i,s){
			if(s.name == "PMO")
				s.visible = false;
		});
		
		//sort
		$.each(actulSeries.series,function(index,val){
			if(val.name == 'SoC')
				val.order = 1;
			else if(val.name == 'HW')
				val.order = 2;
			else if(val.name == 'FW')
				val.order = 3;
			else if(val.name == 'PE')
				val.order = 4;
			else if(val.name == 'AE')
				val.order = 5;
			else if(val.name == 'Algo.')
				val.order = 6;
			else{
				val.order = 10;
			}
				
			
		});		
		sortObjects(actulSeries.series,['order']);
		
		
		//plan
		var groupKeyPlan =  ['PJT_ID','PJT_NAME','YYYYMM'];
		/* var planSeries = getDrillDownDataSeries(
				'',
				planList,
				groupKeyPlan,
				[{col:'PJT_ID',val:pjtId}],
				'YYYYMM', //x축 date
				'MM_PLAN', //y축
				{cd: 'PJT_ID', name:'PJT_NAME'}
		); */
		
		var planSeries = getDrillDownDataSeries2(
				'',
				planList ,
				groupKeyPlan ,
				[{col:'PJT_ID',val:pjtId}], //filter
				[{col:'YYYYMM',convert:'x',datatype:'date'},{col:'MM_PLAN',convert:'y',isnull:0}], //convert
				'YYYYMM', 
				'MM_PLAN',
				{cd: 'PJT_ID', name:'PJT_ID'}
		);
		
		$.each(planSeries.series,function(index,val){
			val.id = 'Plan';
			val.name = 'Plan';
			val.type = "spline";
			val.color = phaseColor[val.name];
			val.visible = false;
			//val.zoomType =  'xy';
		});		
		
		//model
		var groupKeyModel =  ['PJT_ID','PJT_NAME','YYYYMM'];
		/* var modelSeries = getDrillDownDataSeries(
				'',
				modelList,
				groupKeyModel,
				[{col:'PJT_ID',val:pjtId}],
				'YYYYMM', //x축 date
				'MM', //y축
				{cd: 'PJT_ID', name:'PJT_NAME'}
		); */
		
		var modelSeries =  getDrillDownDataSeries2(
				'',
				modelList ,
				groupKeyModel ,
				[{col:'PJT_ID',val:pjtId}], //filter
				[{col:'YYYYMM',convert:'x',datatype:'date'},{col:'MM',convert:'y',isnull:0}], //convert
				'YYYYMM', 
				'MM',
				{cd: 'PJT_ID', name:'PJT_ID'}
		);
		
		$.each(modelSeries.series,function(index,val){
			val.id = 'Model';
			val.name = 'Model';
			val.type = "spline";
			val.color = phaseColor[val.name];
			//val.zoomType =  'xy';
		});	
		
		//series merge
		var series = [];
		$.merge(series,actulSeries.series);
		$.merge(series,planSeries.series);
		
		//모델은 포함하지 않는다.
		//$.merge(series,modelSeries.series);
		
		if($('#container').highcharts() != undefined) $('#container').highcharts().destroy();;
		$('#container').highcharts({
	        chart: {
	            type: 'area'
	            ,zoomType: 'y'
	            
	        },
	        credits: {//gets rid of the highcharts logo in bottom right
                enabled: false
            },
	        title: {
	        	text: '&nbsp;',//series[0].data[0].PJT_NAME + '(by Project > Func)' ,
            	useHTML: true
	        },
	        subtitle: {
	            text: ''
	        },
	        /* exporting:{
	        	buttons: [
					{
						cursor: 'pointer',
					    x: -270,
					    y: 5,
					    onclick: function () {
							drawchartByAllProject();
					    },
					    symbol: 'square',
					    text:'Up to All Project'
					},
					{
					    x: -100,
					    y: 5,
					    onclick: function () {
					    	drawchartByProjectSite(pjtId);
					    },
					    symbol: 'square',
					    text:'Convert Project > Site'
					}
				] 
	        },  */
	        xAxis: {
	        	type: 'datetime',
	        	//tickInterval: 24 * 3000000 * 1000 , //1000000 * 60 * 60 * 24 ,
	        	tickInterval: 24 * 3600 * 1000 * 30,
	        	//tickmarkPlacement: 'on',
	        	dateTimeLabelFormats: { // don't display the dummy year
	        		week: '%m/%e',
	        		day: '%m/%e',
	        		//month: '%y/%m/%e',
	        		//year: '%y/%m/%e',
	        		month: '%y/%m',
	        		year: '%y'
	            },
	            //title: {
	            //    enabled: false
	            //},
	            plotBands : plotBandsHigh,
	            plotLines: plotLinesHigh
	           /* ,labels: {
	                formatter: function () {
	                	var dt = new Date(this.value);
	                	return (dt.getMonth()+1) + '.' + dt.getDate();
	                    
	                }
	            } */
	        },
	        yAxis: {
	            title: {
	                text: ''
	            }
	            
	        },
	        tooltip: {
	        	enabled:true,
	            shared: true ,
	            crosshairs: true,
	            dateTimeLabelFormats: {
	            	week: '%y/%m/%e',
	        		day: '%y/%m/%e',
	        		month: '%y/%m/%e',
	        		year: '%y/%m/%e'
	            },
	            valueSuffix: '' ,
	            valueDecimals: 2 /* ,
	            formatter: function () {
	            	var data = getDataByUtc($("#sProject").val(), this.x);
	                return '' +  data.PHASE + '_' + data.PHASE_SEQ + ' ' + data.ANALYSYS_DATE.replace(/\//g,'.') +  '<br/>' + 
	                    '' + this.series.name + ':' + this.y + '';
	            } */
	        },
	        //legend: legend,
	        plotOptions: {
	        	series: {
	        		cursor: 'pointer',
	                connectNulls: true // by default
	               /*  point:{
	                	events:{
	                		click: function(e){
	                			//alert('click');
	                		}
	                	}
	                } */
	            },
	            spline:{
	            	dataLabels: {
	                    enabled: true,
	                    format:'{point.y:.0f}'
	                }
	            },
	            area: {
	                stacking: 'normal',
	                lineColor: '#666666',
	                lineWidth: 1,
	                marker: {
	                    lineWidth: 1,
	                    lineColor: '#666666',
	                    enabled: true
	                },
	                dataLabels: {
	                    enabled: true,
	                    format:'{point.y:.0f}'
	                },
	                trackByArea: true,
	                enableMouseTracking: true ,
	                events:{
	                	click: function(e){
	                		//this.options.pjt_id
	                		//this.options.pjt_name
	                		drawchartByProjectFuncSite(pjtId,this.name);
                		}  
	                }
	                	
	            },
	            line: {
	            	//stacking: 'normal',
	                //lineColor: 'red',
	                //lineWidth: 1,
	                marker: {
	                	enabled: false,
	                    lineWidth: 1,
	                    lineColor: '#666666'
	                },
	                dataLabels: {
	                    enabled: false
	                },
	                enableMouseTracking: false
	            }
	        },	        
	        series: series
	    },function(chart){
	    		/* var filters = [
   		    		{col: 'PJT_ID',val: pjtId}
   		    		//,{col: 'PJT_FUNC_ID',val: func}
   		    	];
   				var sorts = ['PJT_NAME','NATL_NAME','UP_PJT_FUNC_NAME','PJT_FUNC_NAME','YYYYMM'];			
   				var list = getFilteredData(dataList,filters,sorts);
   				setAlldataInList(list);
   		    	drawGrid(list, gridModel);	 */
	    	}
		);
		
	}
	
function drawchartByProjectFuncSite(pjtId,func){
		currentFunc = drawchartByProjectFuncSite;
		currentArg = arguments;
		
		var groupKeys = ['PJT_ID','PJT_NAME','UP_PJT_FUNC_NAME','NATL_CD','NATL_NAME','YYYYMM'];
		/* var series = getDrillDownDataSeries(
				func,
				dataList,
				groupKeys,
				[{col:'PJT_ID',val:pjtId},{col:'UP_PJT_FUNC_NAME',val: func}],
				'YYYYMM', //x축 date
				'MM_RESULT', //y축
				{cd: 'NATL_CD', name:'NATL_NAME'}
		); */
		
		
		var series = getDrillDownDataSeries2(
				'',
				dataList,
				groupKeys,
				[{col:'PJT_ID',val:pjtId},{col:'UP_PJT_FUNC_NAME',val: func}],
				[{col:'YYYYMM',convert:'x',datatype:'date'},{col:'MM_RESULT',convert:'y',isnull:0}], //convert
				'YYYYMM', //x축 date
				'MM_RESULT', //y축
				{cd: 'NATL_CD', name:'NATL_NAME'}
		);
		
		
		if($('#container').highcharts() != undefined) $('#container').highcharts().destroy();;
		$('#container').highcharts({
	        chart: {
	            type: 'area'
	            ,zoomType: 'y'
	        },
	        credits: {//gets rid of the highcharts logo in bottom right
                enabled: false
            },
	        title: {
	        	text: series.series[0].data[0]['UP_PJT_FUNC_NAME'] ,
            	useHTML: true
	        },
	        subtitle: {
	            text: ''
	        },
	        exporting:{
	        	buttons: [
					/* {
						cursor: 'pointer',
					    x: -250,
					    y: 5,
					    onclick: function () {
							drawchartByAllProject();
					    },
					    symbol: 'square',
					    text:'Up to Main'
					}, */
					{
					    x: -100,
					    y: 5,
					    onclick: function () {
					    	drawchartByProjectFunc(pjtId);
					    },
					    symbol: 'square',
					    text:'Up to All Func'
					}
				]
	        },
	        xAxis: {
	        	type: 'datetime',
	        	//tickInterval: 24 * 3000000 * 1000 , //1000000 * 60 * 60 * 24 ,
	        	tickInterval: 24 * 3600 * 1000 * 30,
	        	//tickmarkPlacement: 'on',
	        	dateTimeLabelFormats: { // don't display the dummy year
	        		week: '%m/%e',
	        		day: '%m/%e',
	        		month: '%y/%m/%e',
	        		year: '%y/%m/%e'
	            },
	            //title: {
	            //    enabled: false
	            //},
	            plotBands : plotBandsHigh,
	            plotLines: plotLinesHigh
	           /* ,labels: {
	                formatter: function () {
	                	var dt = new Date(this.value);
	                	return (dt.getMonth()+1) + '.' + dt.getDate();
	                    
	                }
	            } */
	        },
	        yAxis: {
	            title: {
	                text: ''
	            }
	            
	        },
	        tooltip: {
	        	enabled:true,
	            shared: true ,
	            crosshairs: false,
	            dateTimeLabelFormats: {
	            	week: '%y/%m/%e',
	        		day: '%y/%m/%e',
	        		month: '%y/%m/%e',
	        		year: '%y/%m/%e'
	            },
	            valueSuffix: '' ,
	            valueDecimals: 2
	            /* ,
	            formatter: function () {
	            	var data = getDataByUtc($("#sProject").val(), this.x);
	                return '' +  data.PHASE + '_' + data.PHASE_SEQ + ' ' + data.ANALYSYS_DATE.replace(/\//g,'.') +  '<br/>' + 
	                    '' + this.series.name + ':' + this.y + '';
	            } */
	        },
	        //legend: legend,
	        plotOptions: {
	        	series: {
	        		//cursor: 'pointer',
	                connectNulls: true // by default
	               /*  point:{
	                	events:{
	                		click: function(e){
	                			//alert('click');
	                		}
	                	}
	                } */
	            },
	            area: {
	                stacking: 'normal',
	                lineColor: '#666666',
	                lineWidth: 1,
	                marker: {
	                    lineWidth: 1,
	                    lineColor: '#666666',
	                    enabled: true
	                },
	                dataLabels: {
	                    enabled: true ,
	                    format:'{point.y:.0f}'
	                },
	                trackByArea: true,
	                enableMouseTracking: true
	                /* events:{
	                	click: function(e){
	                		
                		}  
	                } */
	                	
	            },
	            line: {
	            	//stacking: 'normal',
	                //lineColor: 'red',
	                //lineWidth: 1,
	                marker: {
	                	enabled: false,
	                    lineWidth: 1,
	                    lineColor: '#666666'
	                },
	                dataLabels: {
	                    enabled: false
	                },
	                enableMouseTracking: false
	            },
	            column: {
	            	stacking: 'normal',
	                //lineColor: 'red',
	                //lineWidth: 1,
	                marker: {
	                	enabled: true,
	                    lineWidth: 1,
	                    lineColor: '#666666'
	                },
	                dataLabels: {
	                    enabled: false
	                },
	                enableMouseTracking: true
	            }
	        },	        
	        series: series.series
	    },function(chart){
	    		/* var filters = [
  		    		{col: 'PJT_ID',val: pjtId}
  		    		,{col: 'PJT_FUNC_ID',val: func}
  		    	];
  				var sorts = ['PJT_NAME','NATL_NAME','UP_PJT_FUNC_NAME','PJT_FUNC_NAME','YYYYMM'];			
  				var list = getFilteredData(dataList,filters,sorts);
  				setAlldataInList(list);
  		    	drawGrid(list, gridModel);	 */
	    }
		);
		
	}
	
	function makePhaseBand(){
		// Phase. plotBands 구성
		
		var bandIndex = 0;
		for (var i = 0; i < dataPhase.length; i++){	
			//------------- plotBands 구성. Phase -----------//
			var plotBand = {};
			var phaseDtSplit = dataPhase[i].START_DATE.split('/');
			//plotBand.borderColor = 'rgba(0, 0, 0, 0.1)';
			//plotBand.borderWidth = 1;
			// from
			plotBand.from = Date.UTC(phaseDtSplit[0],phaseDtSplit[1] -1 ,phaseDtSplit[2]);
			
			// to
			var phaseDtSplit1 = dataPhase[i].END_DATE.split('/');
			plotBand.to = Date.UTC(phaseDtSplit1[0],phaseDtSplit1[1] -1 ,phaseDtSplit1[2]);
			
			// label
			plotBand.label = {
					text : dataPhase[i].PHASE_NAME ,
					style: {
						color: '#606060' ,
						fontWeight : 'bold'
					}
			};	
			plotBandsHigh.push(plotBand);
			
			//-------------   plotLine 구성.  ----------------//
			var plotLine = {
					color:'black',
					width:1,
					value: 0 ,
					dashStyle: 'ShortDash'			
			};
			
			
			var phaseDtSplit = dataPhase[i].END_DATE.split('/');
			plotLine.value = Date.UTC(phaseDtSplit[0],phaseDtSplit[1] -1 ,phaseDtSplit[2]);
			plotLinesHigh.push(plotLine);
			
			
		}
	}
	
	
	

	</script>
	<style type="text/css">
		html, body,form {
	        height: 100%;
	        width: 100%;
	        padding: 0;
	        margin: 0;
	        overflow: hidden;
	      }
		
		.dashboard-div{
			position: relative;
			min-height: 1px;
			padding-left: 0;
			padding-right: 0;
			width: 100%;
			height: 100%;	
		}
		
		.grid-div{
			position: relative;
			min-height: 1px;
			padding: 20px;
			width: 100%;
			height: 0%;	
		}
		
		.dashboard-div ul {
		  margin: 0;
		  padding: 0;
		  list-style-type: none;
		  /* for flex */
		  display: -webkit-box;      
		  display: -moz-box;  
		  display: -ms-flexbox;   
		  display: -webkit-flex;   
		  display: flex;      
		  height: 100%;
		}
		.dashboard-div ul li {
		  display: inline-block;
		  *display: inline;
		  *zoom: 1;
		  width: 49%;
		}
		
		
		<%-- 그리드폰트 jquery-ui.css 866 line --%>
		.ui-state-default,
		.ui-widget-content .ui-state-default,
		.ui-widget-header .ui-state-default {
			color: black;
		}
		
	</style>
</head>
<body>
<form name="form" id="form" >
<input type="hidden" name="category" id="category" value="${param.category}"/><!-- function, site -->
<input type="hidden" name="pjt_code" id="pjt_code" value="${param.pjt_code}"/>
<div id="container" class="dashboard-div"></div>
</form>
</body>
<script src="js/highcharts/themes/dashboard-simple.js"></script>
</html>
