<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="">

    <select id="dashboard.pms.model" resultType="hashmap">
	    SELECT
	        PJT_CODE
			,PJT_NAME
			,PHASE
			,PLAN_START_DATE
			,PLAN_END_DATE
			,ACTUAL_START_DATE
			,ACTUAL_END_DATE
	    FROM
	        pms_info
	    WHERE
	        pjt_code = 'Pms_Model'
	    order by pjt_code, phase
    </select>
    
    <select id="dashboard.pms.project" resultType="hashmap">
	    SELECT
	        PJT_CODE
			,PJT_NAME
			,PHASE
			,PLAN_START_DATE
			,PLAN_END_DATE
			,ACTUAL_START_DATE
			,ACTUAL_END_DATE
	    FROM
	        pms_info
	    WHERE
	        pjt_code like 'Pms_Project' || '%'
	    order by pjt_code, phase
    </select>
    
    <select id="pms.resource.back" resultType="hashmap">
    	
	    SELECT
	       dsh.YYYYMM, 
	       dsh.PJT_ID, 
	       dsh.PJT_NAME, 
	       /* fn_code_name('',base.code_id) as application, */
	       dsh.PJT_FUNC_ID, 
	       dsh.PJT_FUNC_NAME, 
	       dsh.UP_PJT_FUNC_ID, 
	       dsh.UP_PJT_FUNC_NAME, 
	       dsh.NATL_CD, 
	       dsh.NATL_NAME, 
	       dsh.PJT_PHASE_ID, 
	       dsh.MM_RESULT
	    FROM
	        DSH_RSC dsh
        /* left outer join PJT_BASE_INFO base on 
    		base.pjt_id = dsh.pjt_id and base.code_name = 'Application' */
	    WHERE
	        1=1
	    <if test="estStartDate != null and estStartDate != '' ">
	    	<![CDATA[
	    	and dsh.YYYYMM >= to_char(to_date(#{estStartDate},'YYYY-MM-DD'),'YYYYMMDD') 
	    	]]>
	    </if>
	    <if test="estEndtDate != null and estStartDate != '' ">
	    	<![CDATA[
	    	and dsh.YYYYMM <= to_char(to_date(#{estEndDate},'YYYY-MM-DD'),'YYYYMMDD') 
	    	]]>
	    </if>
	    /* order by PJT_ID,YYYYMM, PJT_FUNC_ID, NATL_CD */
	  
    </select>
    
    <select id="pms.resource" resultType="hashmap">
    	with tbl_func as (
		    select PJT_FUNC_ID,PJT_ID,UP_FUNC_ID from pjt_func
		    union all
		    select 
		        distinct 
		        p.PJT_FUNC_ID,
		        P.PJT_ID,
		        case
		            when p.PJT_FUNC_ID = 'NPM_55555555' then 'NPM_00048189' 
		            when p.PJT_FUNC_ID = 'NPM_00048195' then 'NPM_00048189' 
		        end as UP_FUNC_ID
		        
		        
		    from PJT_RSC_RATE p
		    left outer join PJT_FUNC func
		        on p.PJT_FUNC_ID = func.pjt_func_id
		        and p.pjt_id = func.pjt_id 
		    where p.pjt_func_id in ('NPM_00048195','NPM_55555555')
		    and FUNC.PJT_FUNC_ID is null
		
		)
	    select
	    
			p.YYYYMM || '01' as YYYYMM,
			--p.PJT_FUNC_ID,
			--func.FUNC_NAME,
			nvl(func.UP_FUNC_ID,'Undefined') as UP_PJT_FUNC_ID,
			nvl(FN_CODE_NAME('Function',func.UP_FUNC_ID),'Undefined') as UP_PJT_FUNC_NAME,
			p.PJT_ID,
			info.PJT_NAME,
			p.NATION NATL_CD,
			FN_CODE_NAME('National_Cd',p.NATION) natl_name ,
			--nvl(p.mm_plan,null) as mm_plan,
			0 MM_PLAN,
			-- sum(nvl(p.CAL_RATE,null )) as mm_result , 
			sum(nvl(p.RATE,null )) as mm_result ,
			count(distinct 
	       	case 
	       		when rate is null then null 
	       		when rate = 0 then null
	       		else
	       			p.user_num
	       	end
	       	) as user_count ,
			'X'  REVISION,
			'Y' ISLATEST,
			--p.STATUS,
			p.PJT_PHASE_ID,
			FN_CODE_NAME('Phase',p.PJT_PHASE_ID) as PJT_PHASE_NAME
		from PJT_RSC_RATE p
		join PJT_INFO info
			on p.pjt_id = info.pjt_id
		--left outer join PJT_FUNC func
		left outer join tbl_func func
			on p.PJT_FUNC_ID = func.pjt_func_id
			and p.pjt_id = func.pjt_id 
	    WHERE
	        1=1
	    --and p.ISLATEST = 'Y'
	    and (func.UP_FUNC_ID != 'NPM_00000005' or func.UP_FUNC_ID is null ) /*  dev planning 제외*/
	    <if test="estStartDate != null and estStartDate != ''">
	    	<![CDATA[
	    	and p.YYYYMM >= to_char(to_date(#{estStartDate},'YYYY-MM-DD'),'YYYYMM') 
	    	]]>
	    </if>
	    <if test="estEndDate != null and estEndDate != ''">
	    	<![CDATA[
	    	and p.YYYYMM <= to_char(to_date(#{estEndDate},'YYYY-MM-DD'),'YYYYMM') 
	    	]]>
	    </if>
	    <if test="pjt_code != null and pjt_code != ''">
	    	and info.pjt_Id = #{pjt_code}
	    </if>
	    
	    <!-- 2016.12.20 -->
	    <if test="siteArr != null and siteArr != ''  " >
       		and p.NATION in 
            <foreach collection="siteArr" item="item" index="index"  open="(" separator="," close=")">
                #{item}
            </foreach>
   		</if>
	    <if test="functionArr != null and functionArr != ''  " >
       		and func.UP_FUNC_ID in 
            <foreach collection="functionArr" item="item" index="index"  open="(" separator="," close=")">
                #{item}
            </foreach>
   		</if>
   		<if test="pjtCodeArr != null and pjtCodeArr != ''  " >
       		and info.pjt_Id in 
            <foreach collection="pjtCodeArr" item="item" index="index"  open="(" separator="," close=")">
                #{item}
            </foreach>
   		</if>
	    /* order by PJT_ID,YYYYMM, PJT_FUNC_ID, NATL_CD */
	    -- 2015-12-01 데이타로딩이 너무 오래 걸리므로 group by
	    group by p.YYYYMM,func.UP_FUNC_ID,p.PJT_ID,info.PJT_NAME,p.NATION, p.PJT_PHASE_ID
	  
    </select>
    
    <select id="pms.resource.subfunc" resultType="hashmap">
    	
	    select
	    
			p.YYYYMM || '01' as YYYYMM,
			p.PJT_FUNC_ID,
			func.FUNC_NAME,
			nvl(func.UP_FUNC_ID,'Undefined') as UP_PJT_FUNC_ID,
			nvl(FN_CODE_NAME('Function',func.UP_FUNC_ID),'Undefined') as UP_PJT_FUNC_NAME,
			--p.PJT_ID,
			--info.PJT_NAME,
			p.NATION NATL_CD,
			FN_CODE_NAME('National_Cd',p.NATION) natl_name ,
			--nvl(p.mm_plan,null) as mm_plan,
			0 MM_PLAN,
			sum(nvl(p.CAL_RATE,0 )) as mm_result , -- 2015-11-27
			--nvl(p.CAL_RATE,null ) as mm_result , 
			'X'  REVISION,
			'Y' ISLATEST
			--p.STATUS,
			--p.PJT_PHASE_ID,
			--FN_CODE_NAME('Phase',p.PJT_PHASE_ID) as PJT_PHASE_NAME
		from PJT_RSC_RATE p
		join PJT_INFO info
			on p.pjt_id = info.pjt_id
		left outer join PJT_FUNC func
			on p.PJT_FUNC_ID = func.pjt_func_id
			and p.pjt_id = func.pjt_id 
	    WHERE
	        1=1
	    --and p.ISLATEST = 'Y'
	    and (func.UP_FUNC_ID != 'NPM_00000005' or func.UP_FUNC_ID is null ) /*  dev planning 제외*/
	    <if test="estStartDate != null and estStartDate != ''">
	    	<![CDATA[
	    	and p.YYYYMM >= to_char(to_date(#{estStartDate},'YYYY-MM-DD'),'YYYYMM') 
	    	]]>
	    </if>
	    <if test="estEndDate != null and estEndDate != ''">
	    	<![CDATA[
	    	and p.YYYYMM <= to_char(to_date(#{estEndDate},'YYYY-MM-DD'),'YYYYMM') 
	    	]]>
	    </if>
	    <if test="pjt_code != null and pjt_code != ''">
	    	and info.pjt_Id = #{pjt_code}
	    </if>
	    
	    <if test="site != null and site != ''">
	    	and p.NATION = #{site}
	    </if>
	    
	    <if test="func != null and func != ''">
	    	and func.UP_FUNC_ID = #{func}
	    </if>
	    
	    
	    
	    <!-- 2016.12.20 -->
	    <if test="siteArr != null and siteArr != ''  " >
       		and p.NATION in 
            <foreach collection="siteArr" item="item" index="index"  open="(" separator="," close=")">
                #{item}
            </foreach>
   		</if>
	    <if test="functionArr != null and functionArr != ''  " >
       		and func.UP_FUNC_ID in 
            <foreach collection="functionArr" item="item" index="index"  open="(" separator="," close=")">
                #{item}
            </foreach>
   		</if>
   		<if test="pjtCodeArr != null and pjtCodeArr != ''  " >
       		and info.pjt_Id in 
            <foreach collection="pjtCodeArr" item="item" index="index"  open="(" separator="," close=")">
                #{item}
            </foreach>
   		</if>
	    /* order by PJT_ID,YYYYMM, PJT_FUNC_ID, NATL_CD */
	    group by p.YYYYMM,func.UP_FUNC_ID,p.PJT_FUNC_ID,func.FUNC_NAME, p.NATION
	    order by p.YYYYMM,func.UP_FUNC_ID,p.PJT_FUNC_ID,func.FUNC_NAME
	  
    </select>
    
    <select id="pms.resource.project" resultType="hashmap">
    	
	    select
			p.YYYYMM || '01' as YYYYMM,
			p.PJT_FUNC_ID,
			func.FUNC_NAME,
			func.UP_FUNC_ID as UP_PJT_FUNC_ID,
			FN_CODE_NAME('Function',func.UP_FUNC_ID) as UP_PJT_FUNC_NAME,
			p.PJT_ID,
			info.PJT_NAME,
			p.NATION NATL_CD,
			FN_CODE_NAME('National_Cd',p.NATION) natl_name ,
			--nvl(p.mm_plan,null) as mm_plan,
			nvl(p.CAL_RATE,null) mm_result,
			--sum(nvl(p.CAL_RATE,null)) as mm_result ,
			--p.revision,
			--p.ISLATEST,
			--p.STATUS,
			p.PJT_PHASE_ID,
			FN_CODE_NAME('Phase',p.PJT_PHASE_ID) as PJT_PHASE_NAME
		from PJT_RSC_RATE p -- PJT_RSC_PLAN p
		join PJT_INFO info
			on p.pjt_id = info.pjt_id
		left outer join PJT_FUNC func
			on p.PJT_FUNC_ID = func.pjt_func_id
			and p.pjt_id = func.pjt_id 
	    WHERE
	        1=1
	    --and p.ISLATEST = 'Y'
	    <if test="estStartDate != null and estStartDate != ''">
	    	<![CDATA[
	    	and p.YYYYMM >= to_char(to_date(#{estStartDate},'YYYY-MM-DD'),'YYYYMM') 
	    	]]>
	    </if>
	    <if test="estEndDate != null and estEndDate != ''">
	    	<![CDATA[
	    	and p.YYYYMM <= to_char(to_date(#{estEndDate},'YYYY-MM-DD'),'YYYYMM') 
	    	]]>
	    </if>
	   	and info.pjt_Id = #{pjt_code}
	   	--and p.mm_result is not null
	   	and p.CAL_RATE is not null
	    /* order by PJT_ID,YYYYMM, PJT_FUNC_ID, NATL_CD */
	     --group by p.YYYYMM,func.UP_FUNC_ID,p.PJT_ID,info.PJT_NAME,p.NATION, p.PJT_PHASE_ID
	  
    </select>
    
    <select id="pms.resource.plan" resultType="hashmap">
	    select
			p.YYYYMM || '01' as YYYYMM,
			p.PJT_FUNC_ID,
			func.FUNC_NAME,
			func.UP_FUNC_ID as UP_PJT_FUNC_ID,
			FN_CODE_NAME('Function',func.UP_FUNC_ID) as UP_PJT_FUNC_NAME,
			p.PJT_ID,
			info.PJT_NAME,
			p.NATL_CD,
			FN_CODE_NAME('National_Cd',p.NATL_CD) natl_name ,
			nvl(p.mm_plan,null) as mm_plan,
			nvl(p.mm_result,null) as mm_result ,
			p.revision,
			p.ISLATEST,
			p.STATUS,
			p.PJT_PHASE_ID,
			FN_CODE_NAME('Phase',p.PJT_PHASE_ID) as PJT_PHASE_NAME
		from PJT_RSC_PLAN p
		join PJT_INFO info
			on p.pjt_id = info.pjt_id
		left outer join PJT_FUNC func
			on p.PJT_FUNC_ID = func.pjt_func_id
			and p.pjt_id = func.pjt_id 
	    WHERE
	        1=1
	    and p.ISLATEST = 'Y'
	    <if test="estStartDate != null and estStartDate != ''">
	    	<![CDATA[
	    	and p.YYYYMM >= to_char(to_date(#{estStartDate},'YYYY-MM-DD'),'YYYYMM') 
	    	]]>
	    </if>
	    <if test="estEndDate != null and estEndDate != ''">
	    	<![CDATA[
	    	and p.YYYYMM <= to_char(to_date(#{estEndDate},'YYYY-MM-DD'),'YYYYMM') 
	    	]]>
	    </if>
	    <if test="pjt_code != null and pjt_code != ''">
	    	and info.pjt_Id = #{pjt_code}
	    </if>
	    
	    <!-- 2016.12.20 -->
	    <if test="siteArr != null and siteArr != ''  " >
       		and p.NATL_CD in 
            <foreach collection="siteArr" item="item" index="index"  open="(" separator="," close=")">
                #{item}
            </foreach>
   		</if>
	    <if test="functionArr != null and functionArr != ''  " >
       		and func.UP_FUNC_ID in 
            <foreach collection="functionArr" item="item" index="index"  open="(" separator="," close=")">
                #{item}
            </foreach>
   		</if>
   		<if test="pjtCodeArr != null and pjtCodeArr != ''  " >
       		and info.pjt_Id in 
            <foreach collection="pjtCodeArr" item="item" index="index"  open="(" separator="," close=")">
                #{item}
            </foreach>
   		</if>
	    /* order by PJT_ID,YYYYMM, PJT_FUNC_ID, NATL_CD */
	  
    </select>
    
    <select id="pms.resource.plan.fcst" resultType="hashmap">
	    select
			p.YYYYMM || '01' as YYYYMM,
			--p.PJT_FUNC_ID,
			--func.FUNC_NAME,
			func.UP_FUNC_ID as UP_PJT_FUNC_ID,
			FN_CODE_NAME('Function',func.UP_FUNC_ID) as UP_PJT_FUNC_NAME,
			p.PJT_ID,
			info.PJT_NAME,
			p.NATL_CD,
			FN_CODE_NAME('National_Cd',p.NATL_CD) natl_name ,
			sum(nvl(p.mm_plan,null)) as mm_plan,
			--nvl(p.mm_result,null) as mm_result ,
			--p.revision,
			--p.ISLATEST,
			--p.STATUS,
			p.PJT_PHASE_ID,
			FN_CODE_NAME('Phase',p.PJT_PHASE_ID) as PJT_PHASE_NAME
		from PJT_RSC_PLAN p
		join PJT_INFO info
			on p.pjt_id = info.pjt_id
		left outer join PJT_FUNC func
			on p.PJT_FUNC_ID = func.pjt_func_id
			and p.pjt_id = func.pjt_id 
	    WHERE
	        1=1
	    and p.ISLATEST = 'Y'
	    <if test="estStartDate != null and estStartDate != ''">
	    	<![CDATA[
	    	and p.YYYYMM >= to_char(to_date(#{estStartDate},'YYYY-MM-DD'),'YYYYMM') 
	    	]]>
	    </if>
	    <if test="estEndDate != null and estEndDate != ''">
	    	<![CDATA[
	    	and p.YYYYMM <= to_char(to_date(#{estEndDate},'YYYY-MM-DD'),'YYYYMM') 
	    	]]>
	    </if>
	    <if test="pjt_code != null and pjt_code != ''">
	    	and info.pjt_Id = #{pjt_code}
	    </if>
	    
	    <!-- 2016.12.20 -->
	    <if test="siteArr != null and siteArr != ''  " >
       		and p.NATL_CD in 
            <foreach collection="siteArr" item="item" index="index"  open="(" separator="," close=")">
                #{item}
            </foreach>
   		</if>
	    <if test="functionArr != null and functionArr != ''  " >
       		and func.UP_FUNC_ID in 
            <foreach collection="functionArr" item="item" index="index"  open="(" separator="," close=")">
                #{item}
            </foreach>
   		</if>
   		<if test="pjtCodeArr != null and pjtCodeArr != ''  " >
       		and info.pjt_Id in 
            <foreach collection="pjtCodeArr" item="item" index="index"  open="(" separator="," close=")">
                #{item}
            </foreach>
   		</if>
   		group by p.YYYYMM,func.UP_FUNC_ID,p.PJT_ID,info.PJT_NAME,p.NATL_CD, p.PJT_PHASE_ID
	    /* order by PJT_ID,YYYYMM, PJT_FUNC_ID, NATL_CD */
	  
    </select>
    
    
    
    <select id="pms.resource.model" resultType="hashmap">
	    with baseMonth as (
			select 
				nvl(min(YYYYMM),to_char(sysdate,'YYYYMM')) yyyymm
			from PJT_RSC_PLAN plan
			where plan.PJT_ID = #{pjt_code}
		)
		
		SELECT 
			info.PJT_ID,
			info.PJT_NAME,
		    TR.PJTTPL_ID,
		    tp.PHASE_NAME,
		    tf.FUNC_NAME,
		    tf.UP_FUNC_ID,	  
		    FN_CODE_NAME('Function',tf.UP_FUNC_ID) as UP_PJT_FUNC_NAME,  
		    CASE WHEN baseMonth.yyyymm IS NOT NULL 
		         THEN TO_CHAR(  
		         		ADD_MONTHS ( 
		         			TO_DATE( baseMonth.yyyymm || '01', 'YYYYMMDD' ), ( TO_NUMBER(TR.YYYYMM) -1 )
		         		 ), 'YYYYMM')  || '01'
		     ELSE TR.YYYYMM END YYYYMM,
		     TR.MM
		FROM pjt_info info	
		join TPL_RESOURCE TR 
			on info.PJTTPL_ID  = tr.PJTTPL_ID
	    join TPL_PHASE TP 
	    	on TR.PJTTPL_ID = TP.PJTTPL_ID
	    	AND   TR.PHASE_ID = TP.PJTTPL_PHASE_ID
	    join TPL_FUNC tf 
	    	on tf.PJTTPL_ID = TR.PJTTPL_ID
	    	and tf.PJTTPL_FUNC_ID = tr.PJTTPL_FUNC_ID  
	    join baseMonth on 1=1      
		WHERE info.PJT_ID = #{pjt_code}
		<!-- AND   TR.PHASE_ID IN ( SELECT PJT_PHASE_ID FROM PJT_PHASE WHERE PJT_ID = #{pjt_code} AND USE_YN = 'Y' AND ISLATEST = 'Y' ) -->
		
		/* 실적데이타와  activyty 비교. 개념상 불안정. 나중에 손볼 수 있음. */
		and exists (
			select
				*
			from PJT_ACT pa
			join PJT_PHASE pp 
				on pp.PJT_ID = pa.pjt_id
				and pp.PJT_PHASE_ID = pa.PJT_PHASE_ID
			where 1=1
			--and pa.USE_YN = 'Y'
			and pp.ISLATEST = 'Y'
			and pp.USE_YN  = 'Y'
			
			and pa.PJT_ID = info.pjt_id
			and pa.PJT_FUNC_ID = tf.PJTTPL_FUNC_ID
			and pp.UP_PHASE_ID = tr.phase_id
		) 
		order by tp.PHASE_NAME , tr.YYYYMM
	  
    </select>
    
    <select id="pms.resource.projectall.back" resultType="hashmap">
	    
	    select 
	    	a.PJT_ID, 
	       	a.PJT_NAME, 
	       	a.YYYYMM, 
	       	a.MM_RESULT,
	       	fn_code_name('',base.code_id) as application
	    from 
	    (
	    	SELECT
		       PJT_ID, 
		       PJT_NAME, 
		       YYYYMM, 
		       SUM(MM_RESULT) MM_RESULT
		    FROM
		        DSH_RSC
		    WHERE
		        1=1
		    <if test="estStartDate != null and estStartDate != ''">
		    	<![CDATA[
		    	and DSH_RSC.YYYYMM >= to_char(to_date(#{estStartDate},'YYYY-MM-DD'),'YYYYMMDD') 
		    	]]>
		    </if>
		    <if test="estEndDate != null and estEndDate != ''">
		    	<![CDATA[
		    	and DSH_RSC.YYYYMM <= to_char(to_date(#{estEndDate},'YYYY-MM-DD'),'YYYYMMDD') 
		    	]]>
		    </if>
		    
		    GROUP BY PJT_ID,PJT_NAME,YYYYMM
	    ) a
	    left outer join PJT_BASE_INFO base on 
	    	base.pjt_id = a.pjt_id and base.code_name = 'Application' 
	    
	    
    </select>
    
    <select id="pms.resource.projectall" resultType="hashmap">
	    
	    select 
	    	a.PJT_ID, 
	       	a.PJT_NAME, 
	       	a.YYYYMM, 
	        a.MM_RESULT MM_RESULT,
	       	fn_code_name('Application',base.code_id) as application
	    from 
	    (
	    	SELECT
		       p.pjt_id, 
		       info.PJT_NAME,
		       p.YYYYMM || '01' as YYYYMM, 
		       SUM(p.MM_PLAN) as MM_PLAN,
		       SUM(nvl(p.MM_RESULT, p.MM_PLAN)) MM_RESULT
		    FROM
		        PJT_RSC_PLAN p
		        join PJT_INFO info
					on p.pjt_id = info.pjt_id
		    WHERE
		        1=1 
		        
		        --and info.pjt_name = 'Test Project 0615'
		    and p.ISLATEST = 'Y'
		    <if test="estStartDate != null and estStartDate != '' ">
		    	<![CDATA[
		    	and p.YYYYMM >= to_char(to_date(#{estStartDate},'YYYY-MM-DD'),'YYYYMM') 
		    	]]>
		    </if>
		    <if test="estEndDate != null and estEndDate != '' ">
		    	<![CDATA[
		    	and p.YYYYMM <= to_char(to_date(#{estEndDate},'YYYY-MM-DD'),'YYYYMM') 
		    	]]>
		    </if>
		    
		    GROUP BY p.PJT_ID,info.PJT_NAME,YYYYMM
	    ) a
	    left outer join PJT_BASE_INFO base on 
	    	base.pjt_id = a.pjt_id and base.code_name = 'Application' 
	    
	    
    </select>
    
    <select id="pms.resource.siteall" resultType="hashmap">
	    
	    
	    	SELECT
		      p.NATION NATL_CD,
			  FN_CODE_NAME('National_Cd',p.NATION) natl_name ,
		       p.YYYYMM || '01' as YYYYMM, 
		       0 as MM_PLAN,
		       SUM(nvl(p.CAL_RATE, null)) MM_RESULT,
		       count(distinct 
			       	case 
			       		when rate is null then null 
			       		when rate = 0 then null
			       		else
			       			p.user_num
			       	end
		       	) as user_count
		    FROM
		        PJT_RSC_RATE p
		        join PJT_INFO info
					on p.pjt_id = info.pjt_id
				left outer join PJT_FUNC func
					on p.PJT_FUNC_ID = func.pjt_func_id
					and p.pjt_id = func.pjt_id 
		    WHERE
		        1=1 
		        
		    --and info.pjt_name = 'Test Project 0615'
		    -- and p.ISLATEST = 'Y'
		    and ( func.UP_FUNC_ID != 'NPM_00000005' or func.UP_FUNC_ID is null ) /*  dev planning 제외*/
		    <if test="estStartDate != null and estStartDate != '' ">
		    	<![CDATA[
		    	and p.YYYYMM >= to_char(to_date(#{estStartDate},'YYYY-MM-DD'),'YYYYMM') 
		    	]]>
		    </if>
		    <if test="estEndDate != null and estEndDate != '' ">
		    	<![CDATA[
		    	and p.YYYYMM <= to_char(to_date(#{estEndDate},'YYYY-MM-DD'),'YYYYMM') 
		    	]]>
		    </if>
		    
		    GROUP BY p.NATION,YYYYMM
	   
	    
    </select>
    
    <select id="pms.resource.searchList.back" resultType="hashmap">
	    
	    select 
	    	fn_code_name('',base.code_id) as application,
	    	a.PJT_ID, 
	       	a.PJT_NAME, 
	       	/*a.YYYYMM, */
	       	UP_PJT_FUNC_ID,
	       UP_PJT_FUNC_NAME,
	       NATL_CD,
	       NATL_NAME,
	       	a.MM_RESULT	       	
	    from 
	    (
	    	SELECT
		       PJT_ID, 
		       PJT_NAME, 
		       UP_PJT_FUNC_ID,
		       UP_PJT_FUNC_NAME,
		       NATL_CD,
		       NATL_NAME,
		       SUM(MM_RESULT) MM_RESULT
		    FROM
		        DSH_RSC
		    WHERE
		        1=1
		        <if test="estStartDate != null and  estStartDate != '' " >
			    	<![CDATA[
			    	and DSH_RSC.YYYYMM >= to_char(to_date(#{estStartDate},'YYYY-MM-DD'),'YYYYMMDD') 
			    	]]>
			    </if>
			    <if test="estEndDate != null and estEndDate != '' ">
			    	<![CDATA[
			    	and DSH_RSC.YYYYMM <= to_char(to_date(#{estEndDate},'YYYY-MM-DD'),'YYYYMMDD') 
			    	]]>
			    </if>
		    GROUP BY PJT_ID, 
		       PJT_NAME, 
		       UP_PJT_FUNC_ID,
		       UP_PJT_FUNC_NAME,
		       NATL_CD,
		       NATL_NAME
	    ) a
	    left outer join PJT_BASE_INFO base on 
	    	base.pjt_id = a.pjt_id and base.code_name = 'Application' 
	    
	    
    </select>
    
    
    <select id="pms.resource.searchList" resultType="hashmap">
	    
	    select 
	    	case
	    		when base.code_id = 'SPM_00005010' then   'SPM_00000055'  -- cSSD : Product
	    		when base.code_id = 'SPM_00005558' then   'SPM_00000055'  -- eSSD : Product
	    		when base.code_id = 'SPM_00005011' then   'SPM_00000055'  -- Mobile Solution : Product
	    		when base.code_id = 'SPM_00005530' then   'SPM_00000053'  -- Advance Devlopment : Advanced
	    		when base.code_id = 'SPM_00006291' then   'SPM_00000053'  -- Tech Review : Advanced
	    		when base.code_id = 'SPM_00005541' then   'SPM_00005035'  -- development for multiple projects : Common
	    		when base.code_id = 'SPM_00005542' then   'SPM_00005035'  -- Tools and infra for development : Common
	    		when base.code_id = 'SPM_00005543' then   'SPM_00005035'  -- Management and Operation : Common
	    		else 'Undefined'
	    	end as dev_type,
	    	case
	    		when base.code_id = 'SPM_00005010' then   'Product'  -- cSSD : Product
	    		when base.code_id = 'SPM_00005558' then   'Product'  -- eSSD : Product
	    		when base.code_id = 'SPM_00005011' then   'Product'  -- Mobile Solution : Product
	    		when base.code_id = 'SPM_00005530' then   'Advanced'  -- Advance Devlopment : Advanced
	    		when base.code_id = 'SPM_00006291' then   'Advanced'  -- Tech Review : Advanced
	    		when base.code_id = 'SPM_00005541' then   'Common'  -- development for multiple projects : Common
	    		when base.code_id = 'SPM_00005542' then   'Common'  -- Tools and infra for development : Common
	    		when base.code_id = 'SPM_00005543' then   'Common'  -- Management and Operation : Common
	    		else 'Undefined'
	    	end as dev_type_nm,
	    	base.code_id as application_id,
	    	fn_code_name('',base.code_id) as application,
	    	a.PJT_ID, 
	       	a.PJT_NAME, 
	       	/*a.YYYYMM, */
	       	UP_PJT_FUNC_ID,
	       UP_PJT_FUNC_NAME,
	       NATL_CD,
	       NATL_NAME,
	       	a.MM_RESULT,
	       'xxx' as etc	       	
	    from 
	    (
	    	SELECT
		       p.PJT_ID, 
		       info.PJT_NAME, 
		       nvl(func.UP_FUNC_ID,'Undefined') as UP_PJT_FUNC_ID,
			   nvl(FN_CODE_NAME('Function',func.UP_FUNC_ID),'Undefined') as UP_PJT_FUNC_NAME,
		       p.nation NATL_CD,
			   --FN_CODE_NAME('National_Cd',p.NATL_CD) natl_name ,
			   FN_CODE_NAME('National_Cd',p.nation) natl_name ,
		       -- SUM(p.MM_RESULT) MM_RESULT
		       sum(nvl(p.CAL_RATE,null)) as mm_result 
		    FROM
	        --PJT_RSC_PLAN p
	        PJT_RSC_RATE p
	        join PJT_INFO info
				on p.pjt_id = info.pjt_id
			left outer join PJT_FUNC func
				on p.PJT_FUNC_ID = func.pjt_func_id
				and p.pjt_id = func.pjt_id 
		    WHERE
		        1=1
		    --and p.ISLATEST = 'Y'
		    and ( func.UP_FUNC_ID != 'NPM_00000005' or func.UP_FUNC_ID is null) /*  dev planning 제외*/
		        <if test="estStartDate != null and  estStartDate != '' " >
			    	<![CDATA[
			    	and p.YYYYMM >= to_char(to_date(#{estStartDate},'YYYY-MM-DD'),'YYYYMM') 
			    	]]>
			    </if>
			    <if test="estEndDate != null and estEndDate != '' ">
			    	<![CDATA[
			    	and p.YYYYMM <= to_char(to_date(#{estEndDate},'YYYY-MM-DD'),'YYYYMM') 
			    	]]>
			    </if>
			    <if test="pjt_code != null and pjt_code != ''">
			    	and info.pjt_Id = #{pjt_code}
			    </if>
		    GROUP BY 
				p.PJT_ID, 
		       info.PJT_NAME, 
		       func.UP_FUNC_ID,
			   --FN_CODE_NAME('Function',func.UP_FUNC_ID) as UP_PJT_FUNC_NAME,
		       --p.NATL_CD
		       p.nation
			   --FN_CODE_NAME('National_Cd',p.NATL_CD) natl_name 
	    ) a
	    left outer join PJT_BASE_INFO base on 
	    	base.pjt_id = a.pjt_id and base.code_name = 'Application' 
	    
	    
    </select>
    
    <select id="pms.tat.datalist" resultType="hashmap">
	    SELECT
			phase.PJT_ID
			,pjt.PJT_NAME
			,phase.PJT_PHASE_ID
			,phase.PHASE_NAME
			,phase.PHASE_ORDER
			,phase.PHASE_STATE
			,phase.UP_PHASE_ID
			,phase.PJTTPL_PHASE_ID
			
			,to_char(phase.STD_START_DATE,'YYYYMMDD') STD_START_DATE
			,to_char(phase.STD_END_DATE,'YYYYMMDD')  STD_END_DATE
			,(phase.STD_END_DATE - phase.STD_START_DATE) as TAT_STD
			
			,to_char(phase.EST_START_DATE,'YYYYMMDD') EST_START_DATE
			,to_char(phase.EST_END_DATE,'YYYYMMDD') EST_END_DATE
			,(phase.EST_END_DATE - phase.EST_START_DATE) as TAT_EST
			
			,to_char(phase.START_DATE,'YYYYMMDD') START_DATE
			,to_char(phase.END_DATE,'YYYYMMDD') END_DATE
			,(phase.END_DATE - phase.START_DATE) as TAT
			
			,phase.USE_YN
			,phase.INT_PHASE_YN
			,phase.REMARKS
			,phase.CREATOR
			,phase.CREATED
			,phase.MODIFIER
			,phase.MODIFIED
			,phase.PHASE_LEVEL
			,phase.DURATION
			,phase.REVISION
			,phase.ISLATEST
			,phase.PJT_DOC_ID
			, pjt.PJT_STATE
			, FN_CODE_NAME('Project_State',pjt.PJT_STATE) AS PJT_STATE_NAME
			, ( SELECT CM.CODE_VALUE 
               FROM PJT_BASE_INFO A , CMM_CDBASE CM 
              WHERE A.CODE_ID = CM.CODE_ID 
                AND CM.NSPIM_YN = 'Y' 
                AND CM.CODE_NAME = 'Application' 
                AND A.PJT_ID = pjt.PJT_ID) AS APPLICATION_NAME 
	    FROM pjt_phase phase
	    join pjt_info pjt on 
			pjt.pjt_id = phase.pjt_id
	    where up_phase_id is null 
	    and phase.ISLATEST = 'Y'
	    and phase.END_DATE is not null 
	    and phase.START_DATE is not null
	    and to_char(phase.END_DATE,'YYYYMMDD') != '00000000'
	    <if test="searchStatus != null and  searchStatus != '' " >
	    and pjt.pjt_state = #{searchStatus}
	    </if>
	    <if test="searchApplication != null and  searchApplication != '' " >
	    AND pjt.PJT_ID IN (SELECT DISTINCT PJT_ID FROM PJT_BASE_INFO WHERE CODE_ID = #{searchApplication})
	    </if>
	    order by pjt_id,phase_order
    </select>
    
    <select id="pms.pjt.interface.jira" resultType="hashmap">
    	select
    		PJT_ID, CATEGORY, INTERFACE_ID
    	from PJT_INTERFACE
    	where  pjt_id = #{pmsPjtId}
    	and category = 'JIRA'
    	and use_yn = 'Y'
    </select>
    
    <select id="pms.pjt.interface.codesonar" resultType="hashmap">
    	select
    		PJT_ID, CATEGORY, INTERFACE_ID
    	from PJT_INTERFACE
    	where  pjt_id = #{pmsPjtId}
    	and category = 'JIRA'
    	and use_yn = 'Y'
    	
    </select>
    
    <select id="pms.cmm.cdbase" resultType="hashmap">
    	select
    		*
    	from CMM_CDBASE
    	where code_name = #{codeName}
    	and used = 'Y'
    	and NSPIM_YN = 'Y'
    	order by DISPLAY_ORDER
    </select>
    
    <select id="dashboard.pms.project.list" resultType="hashmap">
    	select 
    		case
	    		when base.code_id = 'SPM_00005010' then   'SPM_00000055'  -- cSSD : Product
	    		when base.code_id = 'SPM_00005558' then   'SPM_00000055'  -- eSSD : Product
	    		when base.code_id = 'SPM_00005011' then   'SPM_00000055'  -- Mobile Solution : Product
	    		when base.code_id = 'SPM_00005530' then   'SPM_00000053'  -- Advance Devlopment : Advanced
	    		when base.code_id = 'SPM_00006291' then   'SPM_00000053'  -- Tech Review : Advanced
	    		when base.code_id = 'SPM_00005541' then   'SPM_00005035'  -- development for multiple projects : Common
	    		when base.code_id = 'SPM_00005542' then   'SPM_00005035'  -- Tools and infra for development : Common
	    		when base.code_id = 'SPM_00005543' then   'SPM_00005035'  -- Management and Operation : Common
	    		else 'Undefined'
	    	end as dev_type,
	    	case
	    		when base.code_id = 'SPM_00005010' then   'Product'  -- cSSD : Product
	    		when base.code_id = 'SPM_00005558' then   'Product'  -- eSSD : Product
	    		when base.code_id = 'SPM_00005011' then   'Product'  -- Mobile Solution : Product
	    		when base.code_id = 'SPM_00005530' then   'Advanced'  -- Advance Devlopment : Advanced
	    		when base.code_id = 'SPM_00006291' then   'Advanced'  -- Tech Review : Advanced
	    		when base.code_id = 'SPM_00005541' then   'Common'  -- development for multiple projects : Common
	    		when base.code_id = 'SPM_00005542' then   'Common'  -- Tools and infra for development : Common
	    		when base.code_id = 'SPM_00005543' then   'Common'  -- Management and Operation : Common
	    		else 'Undefined'
	    	end as dev_type_nm,
    		base.code_id as application_id,
    		cmm.DISPLAY_ORDER,
    		fn_code_name('Application',base.code_id) as application_nm,
    		fn_code_name('Application',base.code_id) as application_name,
	    	a.PJT_ID, 
	    	a.PJT_ID as pjt_code, 
	       	a.PJT_NAME,
	       	a.PJT_STATE,
	       	FN_CODE_NAME('Project_State',a.PJT_STATE) AS PJT_STATE_NAME	       	
	    from pjt_info a
	    left outer join PJT_BASE_INFO base on 
	    	base.pjt_id = a.pjt_id and base.code_name = 'Application'
	    left outer join cmm_cdbase cmm
	    	on cmm.code_name='Application'
	    	and cmm.code_id = base.code_id
	    where 1=1 
	    <if test="allYn == null ">
		    	and cmm.code_id in ('SPM_00005558','SPM_00005010','SPM_00005011')
		</if>
	    order by cmm.DISPLAY_ORDER, a.PJT_NAME
    </select>
    
    <select id="dashboard.pms.modelname.by.pjtid.back" resultType="hashmap">
    	select 
    		a.model_nm 
    	from (
	    	select 
	    		model_nm model_nm
		    from pjt_info a	   
		    where 1=1
		    <if test="pjtId != null and pjtId != '' ">
		    	and a.pjt_id = #{pjtId}
		    </if>
		    <if test="pjtId == null or pjtId == '' ">
		    	and 1 = 2
		    </if>
		    
		    union 
		    select 
	    		model_nm_2 model_nm
		    from pjt_info a	   
		    where 1=1
		    <if test="pjtId != null and pjtId != '' ">
		    	and a.pjt_id = #{pjtId}
		    </if>
		    <if test="pjtId == null or pjtId == '' ">
		    	and 1 = 2
		    </if>
		    
		    union 
		    select 
	    		model_nm_3 model_nm
		    from pjt_info a	   
		    where 1=1
		    <if test="pjtId != null and pjtId != '' ">
		    	and a.pjt_id = #{pjtId}
		    </if>
		    <if test="pjtId == null or pjtId == '' ">
		    	and 1 = 2
		    </if>
		 ) A
		 where a.model_nm is not null
		 
    </select>
    
    <select id="dashboard.pms.modelname.by.pjtid" resultType="hashmap">
    
    	with t as (
    		select 
    			pjt_id, 
	    		model_nm model_nm
		    from pjt_info a
		    where 1=1
		    <if test="pjtId != null and pjtId != '' ">
		    	and a.pjt_id = #{pjtId}
		    </if>
		)   
		
		select 
    		distinct pjt_id,a.model_nm 
    	from (
	    	SELECT 
	    		lv 
	    		, pjt_id
				, trim(REGEXP_SUBSTR(model_nm, '[^,]+', 1, lv)) model_nm
			FROM t  
			<![CDATA[
			, (SELECT LEVEL lv FROM dual  CONNECT BY LEVEL <= 9 ) c
				WHERE lv <= LENGTH(model_nm) - LENGTH(REPLACE(model_nm, ',')) + 1 
			]]>
		) A
		 where a.model_nm is not null
		 order by 2
		 
    </select>
    
    
</mapper>