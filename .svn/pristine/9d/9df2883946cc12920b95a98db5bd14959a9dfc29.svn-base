<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="">
	<select id="dashboard.ssd.mainlist" resultType="hashmap">
		SELECT
	        h.PROJECTID AS product_name
	        ,h.TESTNM AS test_name
	        ,to_char( to_date(h.START_DT,'YYYYMMDD'),'YYYY-MM-DD') AS start_date
	        ,h.FIRMWARE AS fw_version
	        
	        ,h.TONUM
	        ,h.CAPACITY
	        ,COUNT(*) AS test_count
	        ,COUNT(CASE
	            WHEN h.TESTRST = 'PASS' THEN 1
	            ELSE null
	        END) AS pass_count
	        , (COUNT(CASE WHEN h.TESTRST = 'PASS' THEN 1  ELSE null  END)/COUNT(*) ) * 100 as yield
    	FROM RSOHD.DSSDPCI h     
    	where 1=1 
    	<if test="pjtId != null and pjtId != ''  " >
			<choose>
				<when test="models != null and models != ''  and models.size() > 0 " >
		       	  and PROJECTID in
		       		<foreach collection="models" item="item" index="index"  open="(" separator="," close=")">
		           		#{item.MODEL_NM}
		       		</foreach>
		   		</when>
		   		<otherwise>
		   		and 1 = 2
		   		</otherwise>
	   		</choose>
   		</if>  
	    GROUP BY
	        h.PROJECTID
	        ,h.TESTNM
	        ,h.START_DT
	        ,h.FIRMWARE
	        ,h.TONUM
	        ,h.CAPACITY
	     ORDER BY 
	     	h.PROJECTID
	        ,h.TESTNM
	        ,h.START_DT
	        ,h.FIRMWARE	        
	        ,h.TONUM
	        ,h.CAPACITY
		
	</select>
	
	<select id="dashboard.ssd.chartlist" resultType="hashmap">
		SELECT
	        'xxx' gubun
	        ,h.PROJECTID AS product_name
	        ,h.TESTNM AS test_name
	        ,h.FIRMWARE AS fw_version
	        ,to_char( to_date(h.START_DT,'YYYYMMDD'),'YYYY-MM-DD') AS start_date
	        ,h.TONUM
	        ,h.CAPACITY
	        ,COUNT(*) AS test_count
	        ,COUNT(CASE
	            WHEN h.TESTRST = 'PASS' THEN 1
	            ELSE null
	        END) AS pass_count
	        , (COUNT(CASE WHEN h.TESTRST = 'PASS' THEN 1  ELSE null  END)/COUNT(*) ) * 100 as yield
    	FROM RSOHD.DSSDPCI h
    	WHERE 1=1
    	<if test="productNames != null and productNames != '' ">
            and h.PROJECTID in 
            <foreach collection="productNames" item="item" index="index"  open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="testNames != null and testNames != '' ">
            and h.TESTNM in
            <foreach collection="testNames" item="item" index="index"  open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="fwVersions != null and fwVersions != '' ">
            and h.FIRMWARE in
            <foreach collection="fwVersions" item="item" index="index"  open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
         <if test="capacitys != null and capacitys != '' ">
            and h.CAPACITY in
            <foreach collection="capacitys" item="item" index="index"  open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
	    GROUP BY
	        h.PROJECTID
	        ,h.TESTNM
	        ,h.FIRMWARE
	        ,h.START_DT
	        ,h.TONUM
	        ,h.CAPACITY
	     ORDER BY 
	     	h.PROJECTID
	        ,h.TESTNM
	        ,h.FIRMWARE
	        ,h.CAPACITY
	        ,h.START_DT
	        ,h.TONUM
	        ,h.CAPACITY
		
	</select>
	<select id="dashboard.ssd.testinformation.id" resultType="hashmap">
    	select LPAD(TO_NUMBER(nvl(max(test_id),'0'))+1, 11,'0') new_test_id  from  ssd_test_information
    </select>
    
    <update id="dashboard.ssd.delete.testid" parameterType="hashmap">
    	declare
	    	cnt number;
	    begin
	    	delete from  SSD_TEST_INFORMATION where test_id = #{test_id};	    	
	    	delete from SSD_TEST_DISK	 where test_id = #{test_id};   	
	    	delete from SSD_TEST_FILES where test_id = #{test_id};   	
	    	delete from SSD_TEST_RESULT	 where test_id = #{test_id};   	
	    end;
    </update>
    
    <update id="dashboard.ssd.insert.testid" parameterType="hashmap">
    	declare
	    	cnt number;
	    begin
	    	insert into SSD_TEST_INFORMATION(TEST_ID)
	    	values (#{test_id});	    	
	    end;
    </update>
    
    <update id="dashboard.ssd.update.testinformation" parameterType="hashmap">
    	declare
	    	cnt number;
	    begin
	    	update SSD_TEST_INFORMATION set
	    		ins_dt = sysdate ,
	    		 <if test="pc_number != null and pc_number!= '' "> pc_number = #{pc_number} ,</if>
				 <if test="tester_name != null and tester_name!= '' "> tester_name = #{tester_name} ,</if>
				 <if test="target_physical_drive_number != null and target_physical_drive_number!= '' "> target_physical_drive_number = #{target_physical_drive_number} ,</if>
				 <if test="spider_client_version != null and spider_client_version!= '' "> spider_client_version = #{spider_client_version} ,</if>
				 <if test="number_of_test != null and number_of_test!= '' "> number_of_test = #{number_of_test} ,</if>
				 <if test="test_date != null and test_date!= '' "> test_date = #{test_date} ,</if>
				 <if test="device_type != null and device_type != '' "> device_type = #{device_type} ,</if>
				 <if test="model_name != null and model_name!= '' "> model_name = #{model_name} ,</if>
				 <if test="form_factor != null and form_factor!= '' "> form_factor = #{form_factor} ,</if>
				 <if test="nand_flash_verson != null and nand_flash_verson!= '' "> nand_flash_verson = #{nand_flash_verson} ,</if>
				 <if test="nand_flash_process != null and nand_flash_process!= '' "> nand_flash_process = #{nand_flash_process} ,</if>
				 <if test="number_of_channel != null and number_of_channel!= '' "> number_of_channel = #{number_of_channel} ,</if>
				 <if test="number_of_flash != null and number_of_flash!= '' "> number_of_flash = #{number_of_flash} ,</if>
				 <if test="firmware_version != null and firmware_version!= '' "> firmware_version = #{firmware_version} ,</if>
				 <if test="serial_number != null and serial_number!= '' "> serial_number = #{serial_number} ,</if>
				 <if test="capacity != null and capacity!= '' "> capacity = #{capacity} ,</if>
				 <if test="op_percent != null and op_percent!= '' "> op_percent = #{op_percent} ,</if>
				 <if test="ata_specification != null and ata_specification!= '' "> ata_specification = #{ata_specification} ,</if>
				 <if test="chip_kill != null and chip_kill!= '' "> chip_kill = #{chip_kill} ,</if>
				 <if test="tcg != null and tcg!= '' "> tcg = #{tcg} ,</if>
				 <if test="hipm != null and hipm!= '' "> hipm = #{hipm} ,</if>
				 <if test="customer != null and customer!= '' "> customer = #{customer} ,</if>
				 <if test="perforce_number != null and perforce_number!= '' "> perforce_number = #{perforce_number} ,</if>
				 <if test="system_manufacturer != null and system_manufacturer!= '' "> system_manufacturer = #{system_manufacturer} ,</if>
				 <if test="system_model != null and system_model!= '' "> system_model = #{system_model} ,</if>
				 <if test="system_total_physical_memory != null and system_total_physical_memory!= '' "> system_total_physical_memory = #{system_total_physical_memory} ,</if>
				 <if test="system_chipset != null and system_chipset!= '' "> system_chipset = #{system_chipset} ,</if>
				 <if test="os_build_number != null and os_build_number!= '' "> os_build_number = #{os_build_number} ,</if>
				 <if test="os_serial_number != null and os_serial_number!= '' "> os_serial_number = #{os_serial_number} ,</if>
				 <if test="os_system_directory != null and os_system_directory!= '' "> os_system_directory = #{os_system_directory} ,</if>
				 <if test="os_version != null and os_version!= '' "> os_version = #{os_version} ,</if>
				 <if test="cpu_caption != null and cpu_caption!= '' "> cpu_caption = #{cpu_caption} ,</if>
				 <if test="cpu_device_id != null and cpu_device_id!= '' "> cpu_device_id = #{cpu_device_id} ,</if>
				 <if test="cpu_manufacturer != null and cpu_manufacturer!= '' "> cpu_manufacturer = #{cpu_manufacturer} ,</if>
				 <if test="cpu_max_clock_speed != null and cpu_max_clock_speed!= '' "> cpu_max_clock_speed = #{cpu_max_clock_speed} ,</if>
				 <if test="cpu_name != null and cpu_name!= '' "> cpu_name = #{cpu_name} ,</if>
				 <if test="cpu_socket_designation != null and cpu_socket_designation!= '' "> cpu_socket_designation = #{cpu_socket_designation} ,</if>
				 <if test="bios_manufacturer != null and bios_manufacturer!= '' "> bios_manufacturer = #{bios_manufacturer} ,</if>
				 <if test="bios_name != null and bios_name!= '' "> bios_name = #{bios_name} ,</if>
				 <if test="bios_serial_number != null and bios_serial_number!= '' "> bios_serial_number = #{bios_serial_number} ,</if>
				 <if test="bios_smbiosbios_version != null and bios_smbiosbios_version!= '' "> bios_smbiosbios_version = #{bios_smbiosbios_version} ,</if>
				 <if test="bios_version != null and bios_version!= '' "> bios_version = #{bios_version} ,</if>
				 <if test="number_of_disk != null and number_of_disk!= '' " > number_of_disk = #{number_of_disk} ,</if>
				 dummy = null
	    	where test_id = #{test_id};
	    	
	    end;
    </update>
    
    <update id="dashboard.ssd.insert.diskinformation" parameterType="hashmap">
    	declare
	    	cnt number;
	    begin
	    	<if test="list != null and list != '' and list.size() > 0">
	            <foreach collection="list" item="item" index="index"  >
	                insert into SSD_TEST_DISK(TEST_ID, DISK_CAPTION, DISK_DEVICE_ID, DISK_MODEL, DISK_PARTITIONS, DISK_SIZE,INS_DT
	                ,DISPLAY_ORDER )
	                values(
	                	#{test_id},
	                	#{item.disk_caption},
						<choose><when test="item.disk_device_id != null and item.disk_device_id != '' "> #{item.disk_device_id}, </when> <otherwise> null ,</otherwise></choose>
						<choose><when test="item.disk_model != null and item.disk_model != '' "> #{item.disk_model}, </when> <otherwise> null, </otherwise></choose>
						<choose><when test="item.disk_partitions != null and item.disk_partitions != '' "> #{item.disk_partitions},  </when><otherwise> null, </otherwise></choose>
						<choose><when test="item.disk_size != null and item.disk_size != '' "> #{item.disk_size}, </when><otherwise> null ,</otherwise></choose>
						sysdate,
						${index}
	                );
	            </foreach>
       	 </if>
       	 
	    end;
    
    </update>
    
    
    <update id="dashboard.ssd.insert.testresult" parameterType="hashmap">
    	declare
	    	cnt number;
	    	
	    begin
	    	<if test="list != null and list != '' and list.size() > 0">
	            <foreach collection="list" item="item" index="index"  >
	                insert into SSD_TEST_RESULT(TEST_ID, TOOL_NAME, TOOL_VERSION, SCRIPT_NAME, START_TIME, ELAPSED_TIME, TOTAL_TIME, ELAPSED_CYCLE, TOTAL_CYCLE, TEST_STATUS, TEST_LOG, TEST_LOG_PATH, INS_DT
	                ,DISPLAY_ORDER)
	                values(
	                	#{test_id},
	                	#{item.tool_name},
						<choose><when test="item.tool_version != null and item.tool_version != '' "> #{item.tool_version} , </when><otherwise> null , </otherwise></choose>
						<choose><when test="item.script_name != null and item.script_name != '' "> #{item.script_name} , </when><otherwise> null , </otherwise></choose>
						<choose><when test="item.start_time != null and item.start_time != '' "> #{item.start_time} , </when><otherwise> null , </otherwise></choose>
						<choose><when test="item.elapsed_time != null and item.elapsed_time != '' "> #{item.elapsed_time} , </when><otherwise> null , </otherwise></choose>
						<choose><when test="item.total_time != null and item.total_time != '' "> #{item.total_time} , </when><otherwise> null , </otherwise></choose>
						<choose><when test="item.elapsed_cycle != null and item.elapsed_cycle != '' "> #{item.elapsed_cycle} , </when><otherwise> null , </otherwise></choose>
						<choose><when test="item.total_cycle != null and item.total_cycle != '' "> #{item.total_cycle} , </when><otherwise> null , </otherwise></choose>
						<choose><when test="item.test_status != null and item.test_status != '' "> #{item.test_status} , </when><otherwise> null , </otherwise></choose>
						<choose><when test="item.test_log != null and item.test_log != '' "> #{item.test_log} , </when><otherwise> null , </otherwise></choose>
						<choose><when test="item.test_log_path != null and item.test_log_path != '' "> #{item.test_log_path} , </when><otherwise> null , </otherwise></choose>
						sysdate,
						${index}
	                );
	            </foreach>
       	 </if>
       	 
	    end;
    
    </update>
    
    <update id="dashboard.ssd.custom.update.testresult" parameterType="hashmap">
    	declare
	    	vCnt number;
	    	
	    begin
	    	
                UPDATE SSD_TEST_RESULT SET
                	<choose><when test="postdata.TOOL_NAME != null and postdata.TOOL_NAME != '' ">  TOOL_NAME = #{postdata.TOOL_NAME} , </when><otherwise> </otherwise></choose>
					<choose><when test="postdata.TOOL_VERSION != null and postdata.TOOL_VERSION != '' ">  TOOL_VERSION = #{postdata.TOOL_VERSION} , </when><otherwise> </otherwise></choose>
					<choose><when test="postdata.SCRIPT_NAME != null and postdata.SCRIPT_NAME != '' "> SCRIPT_NAME = #{postdata.SCRIPT_NAME} , </when><otherwise> </otherwise></choose>
					<choose><when test="postdata.START_TIME != null and postdata.START_TIME != '' "> START_TIME = #{postdata.START_TIME} , </when><otherwise> </otherwise></choose>
					<choose><when test="postdata.ELAPSED_TIME != null and postdata.ELAPSED_TIME != '' "> ELAPSED_TIME = #{postdata.ELAPSED_TIME} , </when><otherwise> </otherwise></choose>
					<choose><when test="postdata.TOTAL_TIME != null and postdata.TOTAL_TIME != '' "> TOTAL_TIME = #{postdata.TOTAL_TIME} , </when><otherwise> </otherwise></choose>
					<choose><when test="postdata.ELAPSED_CYCLE != null and postdata.ELAPSED_CYCLE != '' "> ELAPSED_CYCLE = #{postdata.ELAPSED_CYCLE} , </when><otherwise>  </otherwise></choose>
					<choose><when test="postdata.TOTAL_CYCLE != null and postdata.TOTAL_CYCLE != '' "> TOTAL_CYCLE = #{postdata.TOTAL_CYCLE} , </when><otherwise>  </otherwise></choose>
					<choose><when test="postdata.TEST_STATUS != null and postdata.TEST_STATUS != '' "> TEST_STATUS = #{postdata.TEST_STATUS} , </when><otherwise>  </otherwise></choose>
					<choose><when test="postdata.TEST_LOG != null and postdata.TEST_LOG != '' "> TEST_LOG = #{postdata.TEST_LOG} , </when><otherwise>  </otherwise></choose>
					<choose><when test="postdata.TEST_LOG_PATH != null and postdata.TEST_LOG_PATH != '' "> TEST_LOG_PATH = #{postdata.TEST_LOG_PATH} , </when><otherwise>  </otherwise></choose>
					MOD_DT = sysdate
                where test_id = #{origindata.TEST_ID}
                and DISPLAY_ORDER =  #{origindata.DISPLAY_ORDER}
                and tool_name = #{origindata.TOOL_NAME} ;
                
                
                select count(*) into vCnt from SSD_TEST_LINK 
                where test_id = #{origindata.TEST_ID}
                and DISPLAY_ORDER =  #{origindata.DISPLAY_ORDER}
                and seq = 0;
                
                if(vCnt > 0 ) then
	                UPDATE SSD_TEST_LINK SET
						<choose><when test="postdata.JIRA != null and postdata.JIRA != '' "> JIRA = #{postdata.JIRA} , </when><otherwise> JIRA = null ,  </otherwise></choose>
						<choose><when test="postdata.CONFLUENCE != null and postdata.CONFLUENCE != '' "> CONFLUENCE = #{postdata.CONFLUENCE} , </when><otherwise> CONFLUENCE = null ,  </otherwise></choose>
						MOD_DT = sysdate
	                where test_id = #{origindata.TEST_ID}
	                and DISPLAY_ORDER =  #{origindata.DISPLAY_ORDER}
	                and seq = 0;
	            else
	            	insert into SSD_TEST_LINK (TEST_ID, DISPLAY_ORDER, JIRA, CONFLUENCE, INS_DT, SEQ)
	            	values(
	            		<choose><when test="origindata.TEST_ID != null and origindata.TEST_ID != '' "> #{origindata.TEST_ID} , </when><otherwise>   </otherwise></choose>
	                	<choose><when test="origindata.DISPLAY_ORDER != null and origindata.DISPLAY_ORDER != '' "> #{origindata.DISPLAY_ORDER} , </when><otherwise>  </otherwise></choose>
	                	<choose><when test="postdata.JIRA != null and postdata.JIRA != '' "> #{postdata.JIRA} , </when><otherwise> null, </otherwise></choose>
						<choose><when test="postdata.CONFLUENCE != null and postdata.CONFLUENCE != '' "> #{postdata.CONFLUENCE} , </when><otherwise> null,</otherwise></choose>
						sysdate ,
						0
	            	);
	            	
                end if;
	            
       	 
	    end;
    
    </update>
    
    <update id="dashboard.ssd.custom.insert.testresult" parameterType="hashmap">
    	declare
	    	vCnt number;
	    	vOrder number;
	    	
	    begin
	    			select nvl(max(DISPLAY_ORDER)+1,0) into vOrder  from SSD_TEST_RESULT where test_id = #{postdata.TEST_ID};
	                insert into SSD_TEST_RESULT(TEST_ID, TOOL_NAME, TOOL_VERSION, SCRIPT_NAME, START_TIME, ELAPSED_TIME, TOTAL_TIME, ELAPSED_CYCLE, TOTAL_CYCLE, TEST_STATUS, TEST_LOG, TEST_LOG_PATH, INS_DT
	                , DISPLAY_ORDER)
	                values(
	                	#{postdata.TEST_ID},
	                	#{postdata.TOOL_NAME},
						<choose><when test="postdata.TOOL_VERSION != null and postdata.TOOL_VERSION != '' "> #{postdata.TOOL_VERSION} , </when><otherwise> null , </otherwise></choose>
						<choose><when test="postdata.SCRIPT_NAME != null and postdata.SCRIPT_NAME != '' "> #{postdata.SCRIPT_NAME} , </when><otherwise> null , </otherwise></choose>
						<choose><when test="postdata.START_TIME != null and postdata.START_TIME != '' ">#{postdata.START_TIME} , </when><otherwise> null , </otherwise></choose>
						<choose><when test="postdata.ELAPSED_TIME != null and postdata.ELAPSED_TIME != '' "> #{postdata.ELAPSED_TIME} , </when><otherwise>null ,  </otherwise></choose>
						<choose><when test="postdata.TOTAL_TIME != null and postdata.TOTAL_TIME != '' "> #{postdata.TOTAL_TIME} , </when><otherwise> null , </otherwise></choose>
						<choose><when test="postdata.ELAPSED_CYCLE != null and postdata.ELAPSED_CYCLE != '' "> #{postdata.ELAPSED_CYCLE} , </when><otherwise>  null , </otherwise></choose>
						<choose><when test="postdata.TOTAL_CYCLE != null and postdata.TOTAL_CYCLE != '' "> #{postdata.TOTAL_CYCLE} , </when><otherwise>  null , </otherwise></choose>
						<choose><when test="postdata.TEST_STATUS != null and postdata.TEST_STATUS != '' "> #{postdata.TEST_STATUS} , </when><otherwise>  null , </otherwise></choose>
						<choose><when test="postdata.TEST_LOG != null and postdata.TEST_LOG != '' "> #{postdata.TEST_LOG} , </when><otherwise>  null , </otherwise></choose>
						<choose><when test="postdata.TEST_LOG_PATH != null and postdata.TEST_LOG_PATH != '' "> #{postdata.TEST_LOG_PATH} , </when><otherwise>  null , </otherwise></choose>
						sysdate,
						vOrder
	                );
	                
	                select count(*) into vCnt from SSD_TEST_LINK 
	                where test_id = #{postdata.TEST_ID}
	                and DISPLAY_ORDER =  vOrder
	                and seq = 0;
	                
	                if(vCnt > 0 ) then
		                UPDATE SSD_TEST_LINK SET
							<choose><when test="postdata.JIRA != null and postdata.JIRA != '' "> JIRA = #{postdata.JIRA} , </when><otherwise>  </otherwise></choose>
							<choose><when test="postdata.CONFLUENCE != null and postdata.CONFLUENCE != '' "> CONFLUENCE = #{postdata.CONFLUENCE} , </when><otherwise> CONFLUENCE = null ,  </otherwise></choose>
							MOD_DT = sysdate
		                where test_id = #{postdata.TEST_ID}
		                and DISPLAY_ORDER =  vOrder
		                and seq = 0;
		            else
		            	insert into SSD_TEST_LINK (TEST_ID, DISPLAY_ORDER, JIRA, CONFLUENCE, INS_DT, SEQ)
		            	values(
		            		#{postdata.TEST_ID} ,
		                	vOrder,
		                	<choose><when test="postdata.JIRA != null and postdata.JIRA != '' "> #{postdata.JIRA} , </when><otherwise> null, </otherwise></choose>
							<choose><when test="postdata.CONFLUENCE != null and postdata.CONFLUENCE != '' "> #{postdata.CONFLUENCE} , </when><otherwise> null,</otherwise></choose>
							sysdate ,
							0
		            	);
	            	
                end if;
       	 
	    end;
    
    </update>
    
    
    <update id="dashboard.ssd.custom.delete.testresult" parameterType="hashmap">
    	declare
	    	cnt number;
	    begin
	    	
                delete from SSD_TEST_RESULT
                where test_id = #{TEST_ID}
                and DISPLAY_ORDER =  #{DISPLAY_ORDER}
                and tool_name = #{TOOL_NAME};
                
                delete from SSD_TEST_LINK
                 where test_id = #{TEST_ID}
                and DISPLAY_ORDER =  #{DISPLAY_ORDER};
                
       	 
	    end;
    
    </update>
    
    <update id="dashboard.ssd.update.dummy" parameterType="hashmap">
    	declare
	    	cnt number;
	    	
	    begin
	    	
	    	select 1 into cnt from dual;
       	 
	    end;
    
    </update>
    
    <update id="dashboard.ssd.update.fileInfos" parameterType="hashmap">
    	declare
    		cnt number;
    	begin
    		select 0 into cnt from dual;
    		<if test="files != null and files != '' and files.size() > 0">
	            <foreach collection="files" item="item" index="index"  >
	            	select count(*) into cnt from SSD_TEST_FILES where test_id = #{test_id} and FIELD_NAME = #{item.fieldName} and file_name = #{item.orgFileName};
	            	if cnt = 0 then
	            		insert into SSD_TEST_FILES(TEST_ID, FILE_NAME, FIELD_NAME, FILE_PATH, INS_DT)
	            		values(
		                	#{test_id},
		                	#{item.orgFileName},
		                	#{item.fieldName},
							#{item.filePath},
							sysdate
						);
					else
						update SSD_TEST_FILES set
							FILE_PATH = #{item.filePath},
							MOD_DT = sysdate
						where test_id = #{test_id} and FIELD_NAME = #{item.fieldName} and file_name = #{item.orgFileName};
						
					end if;
	            </foreach>
       	 </if>    	
    	end;
    </update>
    
    <update id="dashboard.ssd.insert.fileInfos" parameterType="hashmap">
    	declare
    		cnt number;
    	begin
    		select 0 into cnt from dual;
    		<if test="files != null and files != '' and files.size() > 0">
	            <foreach collection="files" item="item" index="index"  >
	            	insert into SSD_TEST_FILES(TEST_ID, FILE_NAME, FIELD_NAME, FILE_PATH, INS_DT)
	            		values(
		                	#{test_id},
		                	#{item.orgFileName},
		                	#{item.fieldName},
							#{item.filePath},
							sysdate
						);
	            </foreach>
       	 </if>    	
    	end;
    </update>
    
     <update id="dashboard.ssd.custom.file.delete" parameterType="hashmap">
    	declare
    		cnt number;
    	begin
    		select 0 into cnt from dual;
    		
			delete from SSD_TEST_FILES
			where TEST_ID = #{TEST_ID}
			and FIELD_NAME = #{FIELD_NAME}
			and file_name = #{FILE_NAME} ;
			
    	end;
    </update>
    	
	
	<update id="dashboard.ssd.update.testlog.fileInfos" parameterType="hashmap">
    </update>
    
    
    <select id="dashboard.ssd.custom.mainlist.all" resultType="hashmap">
    	select
			a.${groupbyCol},
			b.TEST_STATUS,
			count(*) cnt 	
		from SSD_TEST_INFORMATION a
		join SSD_TEST_RESULT b
			on a.test_id = b.test_id
		where test_status in ('PASS','FAIL')
		<!-- Start opener filter -->
		<if test="deviceTypeArr != null and deviceTypeArr != ''  " >
       		and A.DEVICE_TYPE in 
            <foreach collection="deviceTypeArr" item="item" index="index"  open="(" separator="," close=")">
                #{item}
            </foreach>
   		</if>
   		<if test="modelNameArr != null and modelNameArr != ''   " >
       		and A.MODEL_NAME in 
            <foreach collection="modelNameArr" item="item" index="index"  open="(" separator="," close=")">
                #{item}
            </foreach>
   		</if>
   		<if test="fimwareVersionArr != null and fimwareVersionArr != ''   " >
       		and A.FIRMWARE_VERSION in 
            <foreach collection="fimwareVersionArr" item="item" index="index"  open="(" separator="," close=")">
                #{item}
            </foreach>
   		</if>
   		<if test="systemManufacturerArr != null and systemManufacturerArr != ''   " >
       		and A.SYSTEM_MANUFACTURER in 
            <foreach collection="systemManufacturerArr" item="item" index="index"  open="(" separator="," close=")">
                #{item}
            </foreach>
   		</if>
   		<if test="systemModelArr != null and systemModelArr != ''  " >
       		and A.SYSTEM_MODEL in 
            <foreach collection="systemModelArr" item="item" index="index"  open="(" separator="," close=")">
                #{item}
            </foreach>
   		</if>
   		<if test="systemChipsetArr != null and systemChipsetArr != ''  " >
       		and A.SYSTEM_CHIPSET in 
            <foreach collection="systemChipsetArr" item="item" index="index"  open="(" separator="," close=")">
                #{item}
            </foreach>
   		</if>
		<!-- End opener filter -->
		<!-- Start sub filterdata -->
		<if test="customer1 != null and customer1 != '' ">
		and a.customer = #{customer1}
		</if>
		<if test="deviceType1 != null and deviceType1 != '' ">
		and a.DEVICE_TYPE = #{deviceType1}
		</if>
		<!-- End sub filterdata -->
		
		group by 	a.${groupbyCol}, 	b.TEST_STATUS
    	
    </select>
    
    <select id="dashboard.ssd.custom.mainlist" resultType="hashmap">
    	select 
    		A.*,
    		A.pass || '/' || A.total as test_result
    		
    	from (
	    	SELECT
	    		
	    		A.*,
	    		(select count(*) from SSD_TEST_RESULT b where a.test_id = b.test_id) total,
	    		(select count(case when TEST_STATUS = 'PASS' then 1 else null end ) from SSD_TEST_RESULT b where a.test_id = b.test_id) pass
	    	FROM
	    	(
	    		SELECT A.*, ROWNUM AS ROW_NUM from (
			    	select
			    		A.TEST_ID,
						A.PC_NUMBER,
						A.TESTER_NAME,
						A.TARGET_PHYSICAL_DRIVE_NUMBER,
						A.SPIDER_CLIENT_VERSION,
						A.NUMBER_OF_TEST,
						case 
							when a.TEST_DATE != '0' and a.TEST_DATE is not null then ''								
							else 'Debug_'
						end  || 
						to_char(
							to_date(
								case 
									when a.TEST_DATE != '0' and a.TEST_DATE is not null then A.TEST_DATE								
									else to_char(A.ins_dt,'YYYYMMDD_HH24MISS')
								end,
								'YYYYMMDD_HH24MISS'		
							),							
							'YYYY/MM/DD HH24:MI:SS'
						) as TEST_DATE,
						A.DEVICE_TYPE,
						A.MODEL_NAME,
						A.FORM_FACTOR,
						A.NAND_FLASH_VERSON,
						A.NAND_FLASH_PROCESS,
						A.NUMBER_OF_CHANNEL,
						A.NUMBER_OF_FLASH,
						A.FIRMWARE_VERSION,
						A.SERIAL_NUMBER,
						A.CAPACITY,
						A.OP_PERCENT,
						A.ATA_SPECIFICATION,
						A.CHIP_KILL,
						A.TCG,
						A.HIPM,
						A.CUSTOMER,
						A.PERFORCE_NUMBER,
						A.SYSTEM_MANUFACTURER,
						A.SYSTEM_MODEL,
						A.SYSTEM_TOTAL_PHYSICAL_MEMORY,
						A.SYSTEM_CHIPSET,
						A.OS_BUILD_NUMBER,
						A.OS_SERIAL_NUMBER,
						A.OS_SYSTEM_DIRECTORY,
						A.OS_VERSION,
						A.CPU_CAPTION,
						A.CPU_DEVICE_ID,
						A.CPU_MANUFACTURER,
						A.CPU_MAX_CLOCK_SPEED,
						A.CPU_NAME,
						A.CPU_SOCKET_DESIGNATION,
						A.BIOS_MANUFACTURER,
						A.BIOS_NAME,
						A.BIOS_SERIAL_NUMBER,
						A.BIOS_SMBIOSBIOS_VERSION,
						A.BIOS_VERSION,
						A.NUMBER_OF_DISK,
						A.INS_DT,
						A.DUMMY,
						A.COPIED
			    	from SSD_TEST_INFORMATION A
			        where 1=1
			        <choose>
						<when test="filters != null and filters != ''  and filters.rules.size() > 0 " >
				       		<foreach collection="filters.rules" item="item" index="index"  >
				           		and REGEXP_LIKE(${item.field},#{item.data},'i') 
				       		</foreach>
				   		</when>
				   		<otherwise>
				   		</otherwise>
			   		</choose>
			   		<!-- 상단검색조건 -->
					<if test="deviceTypeArr != null and deviceTypeArr != ''  " >
			       		and A.DEVICE_TYPE in 
			            <foreach collection="deviceTypeArr" item="item" index="index"  open="(" separator="," close=")">
			                #{item}
			            </foreach>
			   		</if>
			   		<if test="modelNameArr != null and modelNameArr != ''   " >
			       		and A.MODEL_NAME in 
			            <foreach collection="modelNameArr" item="item" index="index"  open="(" separator="," close=")">
			                #{item}
			            </foreach>
			   		</if>
			   		<if test="fimwareVersionArr != null and fimwareVersionArr != ''   " >
			       		and A.FIRMWARE_VERSION in 
			            <foreach collection="fimwareVersionArr" item="item" index="index"  open="(" separator="," close=")">
			                #{item}
			            </foreach>
			   		</if>
			   		<if test="systemManufacturerArr != null and systemManufacturerArr != ''   " >
			       		and A.SYSTEM_MANUFACTURER in 
			            <foreach collection="systemManufacturerArr" item="item" index="index"  open="(" separator="," close=")">
			                #{item}
			            </foreach>
			   		</if>
			   		<if test="systemModelArr != null and systemModelArr != ''  " >
			       		and A.SYSTEM_MODEL in 
			            <foreach collection="systemModelArr" item="item" index="index"  open="(" separator="," close=")">
			                #{item}
			            </foreach>
			   		</if>
			   		<if test="systemChipsetArr != null and systemChipsetArr != ''  " >
			       		and A.SYSTEM_CHIPSET in 
			            <foreach collection="systemChipsetArr" item="item" index="index"  open="(" separator="," close=")">
			                #{item}
			            </foreach>
			   		</if>
			    	order by test_id desc 
		    	) A
	    	) A 
	    	where
	    	<![CDATA[
		    	A.row_num >  to_number(#{rows}) * (to_number(#{page}) -1) 
		    	and A.row_num <= to_number(#{rows}) * to_number(#{page})
	    	]]>
	    ) A 
    	
    </select>
    
    <!--  Paging 처리를 위함 -->
    <select id="dashboard.ssd.custom.mainlist.page" resultType="hashmap">
    	
	    	select 
				ceil(count(*)/ #{rows} ) as total,
				#{page} as page ,
				count(*) records 
			from 
			(
			select
		    		A.test_id,
		    		A.TEST_DATE,
		    		A.PC_NUMBER,
		    		A.TESTER_NAME,
		    		A.MODEL_NAME,
		    		A.CAPACITY,
		    		A.FIRMWARE_VERSION
		    	from SSD_TEST_INFORMATION A		    	
		    	where 1=1
		    	<choose>
					<when test="filters != null and filters != ''  and filters.rules.size() > 0 " >
			       		<foreach collection="filters.rules" item="item" index="index"  >
			           		and REGEXP_LIKE(${item.field},#{item.data},'i') 
			       		</foreach>
			   		</when>
			   		<otherwise>
			   		</otherwise>
		   		</choose>
		    	<!-- 상단검색조건 -->
					<if test="deviceTypeArr != null and deviceTypeArr != ''  " >
			       		and A.DEVICE_TYPE in 
			            <foreach collection="deviceTypeArr" item="item" index="index"  open="(" separator="," close=")">
			                #{item}
			            </foreach>
			   		</if>
			   		<if test="modelNameArr != null and modelNameArr != ''   " >
			       		and A.MODEL_NAME in 
			            <foreach collection="modelNameArr" item="item" index="index"  open="(" separator="," close=")">
			                #{item}
			            </foreach>
			   		</if>
			   		<if test="fimwareVersionArr != null and fimwareVersionArr != ''   " >
			       		and A.FIRMWARE_VERSION in 
			            <foreach collection="fimwareVersionArr" item="item" index="index"  open="(" separator="," close=")">
			                #{item}
			            </foreach>
			   		</if>
			   		<if test="systemManufacturerArr != null and systemManufacturerArr != ''   " >
			       		and A.SYSTEM_MANUFACTURER in 
			            <foreach collection="systemManufacturerArr" item="item" index="index"  open="(" separator="," close=")">
			                #{item}
			            </foreach>
			   		</if>
			   		<if test="systemModelArr != null and systemModelArr != ''  " >
			       		and A.SYSTEM_MODEL in 
			            <foreach collection="systemModelArr" item="item" index="index"  open="(" separator="," close=")">
			                #{item}
			            </foreach>
			   		</if>
			   		<if test="systemChipsetArr != null and systemChipsetArr != ''  " >
			       		and A.SYSTEM_CHIPSET in 
			            <foreach collection="systemChipsetArr" item="item" index="index"  open="(" separator="," close=")">
			                #{item}
			            </foreach>
			   		</if>
		    	)
    	
    </select>
    
    <select id="dashboard.ssd.custom.testInformation" resultType="hashmap">
    	
    	select
    		A.TEST_ID,
						A.PC_NUMBER,
						A.TESTER_NAME,
						A.TARGET_PHYSICAL_DRIVE_NUMBER,
						A.SPIDER_CLIENT_VERSION,
						A.NUMBER_OF_TEST,
						case 
							when a.TEST_DATE != '0' and a.TEST_DATE is not null then ''								
							else 'Debug_'
						end  || 
						to_char(
							to_date(
								case 
									when a.TEST_DATE != '0' and a.TEST_DATE is not null then A.TEST_DATE								
									else to_char(A.ins_dt,'YYYYMMDD_HH24MISS')
								end,
								'YYYYMMDD_HH24MISS'		
							),							
							'YYYY/MM/DD HH24:MI:SS'
						) as TEST_DATE,
						A.DEVICE_TYPE,
						A.MODEL_NAME,
						A.FORM_FACTOR,
						A.NAND_FLASH_VERSON,
						A.NAND_FLASH_PROCESS,
						A.NUMBER_OF_CHANNEL,
						A.NUMBER_OF_FLASH,
						A.FIRMWARE_VERSION,
						A.SERIAL_NUMBER,
						A.CAPACITY,
						A.OP_PERCENT,
						A.ATA_SPECIFICATION,
						A.CHIP_KILL,
						A.TCG,
						A.HIPM,
						A.CUSTOMER,
						A.PERFORCE_NUMBER,
						A.SYSTEM_MANUFACTURER,
						A.SYSTEM_MODEL,
						A.SYSTEM_TOTAL_PHYSICAL_MEMORY,
						A.SYSTEM_CHIPSET,
						A.OS_BUILD_NUMBER,
						A.OS_SERIAL_NUMBER,
						A.OS_SYSTEM_DIRECTORY,
						A.OS_VERSION,
						A.CPU_CAPTION,
						A.CPU_DEVICE_ID,
						A.CPU_MANUFACTURER,
						A.CPU_MAX_CLOCK_SPEED,
						A.CPU_NAME,
						A.CPU_SOCKET_DESIGNATION,
						A.BIOS_MANUFACTURER,
						A.BIOS_NAME,
						A.BIOS_SERIAL_NUMBER,
						A.BIOS_SMBIOSBIOS_VERSION,
						A.BIOS_VERSION,
						A.NUMBER_OF_DISK,
						A.INS_DT,
						A.DUMMY,
						A.COPIED
    	from SSD_TEST_INFORMATION A
    	where test_id = #{testId}
    	
    </select>
    
    <select id="dashboard.ssd.custom.testDisk" resultType="hashmap">
    	
    	select
    		*
    	from SSD_TEST_DISK A
    	where test_id = #{testId}
    	order by display_order, DISK_CAPTION
    	
    	
    </select>
    
    <select id="dashboard.ssd.custom.testResult" resultType="hashmap">
    	
    	select
    		 A.TEST_ID,
    		 A.DISPLAY_ORDER,
			 A.TOOL_NAME,
			 A.TOOL_VERSION,
			 A.SCRIPT_NAME,
			 A.START_TIME,
			 A.ELAPSED_TIME,
			 A.TOTAL_TIME,
			 A.ELAPSED_CYCLE,
			 A.TOTAL_CYCLE,
			 A.TEST_STATUS,
			 A.TEST_LOG,
			 A.TEST_LOG_PATH,
			 A.INS_DT,
			 B.FILE_PATH,
			 C.JIRA , 
			 C.JIRA JIRA_ORIGIN, 
			 C.CONFLUENCE,
			 C.CONFLUENCE CONFLUENCE_ORIGIN
			 
    	from SSD_TEST_RESULT A
    	left outer join SSD_TEST_FILES B
    		on A.test_id = B.test_id
    		and A.TEST_LOG = B.FILE_NAME
    		and B.FIELD_NAME = 'test_log'
    	left outer join 	SSD_TEST_LINK C
    		on A.test_id = C.test_id
    		and c.display_order = a.display_order
    		and c.seq = 0
    	where a.test_id = #{testId}
    	order by A.display_order,  A.TOOL_NAME
    	
    </select>
    <select id="dashboard.ssd.custom.attachments" resultType="hashmap">
    	
    	select
    		*
    	from SSD_TEST_FILES A
    	where test_id = #{testId}
    	<if test="FIELD_NAME != null and FIELD_NAME != ''  " >
    		and FIELD_NAME = #{FIELD_NAME}
    	</if>
    	order by file_name
    	
    </select>
    
    <select id="dashboard.ssd.custom.field.distinct" resultType="hashmap">
    	select
    		<if test="filters != null and filters.fields != null and filters.fields != ''  " >
	            <foreach collection="filters.fields" item="item" index="index"  open="" separator="," close="">
	                ${item}
	            </foreach>
	   		</if>
			, count(*) cnt 	
		from SSD_TEST_INFORMATION a
		where 1=1
		<if test="filters != null and filters.fields != null and filters.fields != ''  " >
            <foreach collection="filters.fields" item="item" index="index"  open="" separator="" close="">
                and ${item} is not null
            </foreach>
            group by <foreach collection="filters.fields" item="item" index="index"  open="" separator="," close=""> ${item} </foreach>
   		</if>
    	
    </select>
    
    
    <select id="dashboard.ssd.custom.testComment" resultType="hashmap">
    	
    	select
    		TEST_ID, 
    		DISPLAY_ORDER, 
    		USER_ID, 
    		USER_NAME, 
    		COMMENTS, 
    		to_char(INS_DT,'YYYY-MM-DD') INS_DT, 
    		to_char(nvl(MOD_DT,INS_DT),'YYYY-MM-DD HH24:MI') MOD_DT
			 
    	from SSD_TEST_COMMENTS A
    	where a.test_id = #{testId}
    	order by A.display_order
    	
    </select>
    
    <update id="dashboard.ssd.custom.update.testcomment" parameterType="hashmap">
    	declare
	    	vCnt number;
	    	
	    begin
	    	
                UPDATE SSD_TEST_COMMENTS SET
                	<choose><when test="postdata.userId != null and postdata.userId != '' ">  USER_ID = #{postdata.userId} , </when><otherwise> </otherwise></choose>
					<choose><when test="postdata.COMMENTS != null and postdata.COMMENTS != '' ">  COMMENTS = #{postdata.COMMENTS} , </when><otherwise> </otherwise></choose>
					MOD_DT = sysdate
                where test_id = #{origindata.TEST_ID}
                and DISPLAY_ORDER =  #{origindata.DISPLAY_ORDER}
               ;
       	 
	    end;
    
    </update>
    
    <update id="dashboard.ssd.custom.insert.testcomment" parameterType="hashmap">
    	declare
	    	vCnt number;
	    	vOrder number;
	    	
	    begin
    			select nvl(max(DISPLAY_ORDER)+1,0) into vOrder  from SSD_TEST_COMMENTS where test_id = #{postdata.TEST_ID};
    			
                insert into SSD_TEST_COMMENTS(TEST_ID, DISPLAY_ORDER, USER_ID, COMMENTS, INS_DT, MOD_DT)
                values(
                	#{postdata.TEST_ID},
                	vOrder,
					<choose><when test="postdata.userId != null and postdata.userId != '' "> #{postdata.userId} , </when><otherwise> null , </otherwise></choose>
					<choose><when test="postdata.COMMENTS != null and postdata.COMMENTS != '' ">#{postdata.COMMENTS} , </when><otherwise> null , </otherwise></choose>
					sysdate,
					sysdate
                );
       	 
	    end;
    
    </update>
    
    <update id="dashboard.ssd.custom.delete.testcomment" parameterType="hashmap">
    	declare
	    	cnt number;
	    begin
	    	
                delete from SSD_TEST_COMMENTS
                where test_id = #{TEST_ID}
                and DISPLAY_ORDER =  #{DISPLAY_ORDER}
                ;
       	 
	    end;
    
    </update>
	
</mapper>    