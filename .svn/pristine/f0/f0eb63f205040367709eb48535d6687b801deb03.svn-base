<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="">

    <select id="systemUsage.selectSystemUsageList" resultType="hashmap">
    	SELECT '01' SERIES_TYPE
             , FUNCTION_ID
             , FUNCTION_NAME
             , EMPLOYEE_COUNT COUNT_VAL
             , TO_CHAR(EMPLOYEE_COUNT, 'FM999,999,999,999,999') EMPLOYEE_COUNT
             , TO_CHAR(USE_COUNT, 'FM999,999,999,999,999') USE_COUNT
             , CASE WHEN EMPLOYEE_COUNT = 0 THEN 0 ELSE ROUND(USE_COUNT / EMPLOYEE_COUNT, 1) END USE_AVERAGE
             , ROW_NUMBER() OVER(ORDER BY A.EMPLOYEE_COUNT DESC, A.USE_COUNT DESC, A.FUNCTION_ID) ROW_SEQ
        FROM (
                SELECT B.SYSTEM_ID
                     , B.FUNCTION_ID
                     , CASE WHEN B.SYSTEM_ID = 'SolutionPMS' THEN B.MENU_LEVEL_1 || ' > ' || B.MENU_LEVEL_2 || ' > ' || B.FUNCTION_NAME ELSE '[' || B.MENU_LEVEL_1 || '] ' || B.FUNCTION_NAME END FUNCTION_NAME
                     , NVL(A.EMPLOYEE_COUNT, 0) EMPLOYEE_COUNT
                     , NVL(A.USE_COUNT, 0) USE_COUNT
                FROM (  
                        SELECT SYSTEM_ID
                             , FUNCTION_ID
                             , USE_MONTH
                             , EMPLOYEE_COUNT
                             , USE_COUNT
                        FROM IT_SYSTEM_USAGE_MONTH
                        WHERE 1 = 1
                          AND SYSTEM_ID = #{systemId}
                          AND USE_MONTH = #{useMonth}
                      ) A,
                      (
                        SELECT SYSTEM_ID
                             , FUNCTION_ID
                             , FUNCTION_NAME
                             , MENU_LEVEL_1
                             , MENU_LEVEL_2
                             , MENU_LEVEL_3
                        FROM IT_SYSTEM_MENU_HIERARCHY
                        WHERE SYSTEM_ID = #{systemId}
                      ) B
                WHERE A.SYSTEM_ID(+) = B.SYSTEM_ID
                  AND A.FUNCTION_ID(+) = B.FUNCTION_ID
             ) A
        UNION ALL
        SELECT '02' SERIES_TYPE
             , FUNCTION_ID
             , FUNCTION_NAME
             , USE_COUNT COUNT_VAL
             , TO_CHAR(EMPLOYEE_COUNT, 'FM999,999,999,999,999') EMPLOYEE_COUNT
             , TO_CHAR(USE_COUNT, 'FM999,999,999,999,999') USE_COUNT
             , CASE WHEN EMPLOYEE_COUNT = 0 THEN 0 ELSE ROUND(USE_COUNT / EMPLOYEE_COUNT, 1) END USE_AVERAGE
             , ROW_NUMBER() OVER(ORDER BY A.EMPLOYEE_COUNT DESC, A.USE_COUNT DESC, A.FUNCTION_ID) ROW_SEQ
        FROM (
                SELECT B.SYSTEM_ID
                     , B.FUNCTION_ID
                     , CASE WHEN B.SYSTEM_ID = 'SolutionPMS' THEN B.MENU_LEVEL_1 || ' > ' || B.MENU_LEVEL_2 || ' > ' || B.FUNCTION_NAME ELSE '[' || B.MENU_LEVEL_1 || '] ' || B.FUNCTION_NAME END FUNCTION_NAME
                     , NVL(A.EMPLOYEE_COUNT, 0) EMPLOYEE_COUNT
                     , NVL(A.USE_COUNT, 0) USE_COUNT
                FROM (  
                        SELECT SYSTEM_ID
                             , FUNCTION_ID
                             , USE_MONTH
                             , EMPLOYEE_COUNT
                             , USE_COUNT
                        FROM IT_SYSTEM_USAGE_MONTH
                        WHERE 1 = 1
                          AND SYSTEM_ID = #{systemId}
                          AND USE_MONTH = #{useMonth}
                      ) A,
                      (
                        SELECT SYSTEM_ID
                             , FUNCTION_ID
                             , FUNCTION_NAME
                             , MENU_LEVEL_1
                             , MENU_LEVEL_2
                             , MENU_LEVEL_3
                        FROM IT_SYSTEM_MENU_HIERARCHY
                        WHERE SYSTEM_ID = #{systemId}
                      ) B
                WHERE A.SYSTEM_ID(+) = B.SYSTEM_ID
                  AND A.FUNCTION_ID(+) = B.FUNCTION_ID
             ) A
    </select>
        
</mapper>